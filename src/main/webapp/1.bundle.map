{"version":3,"sources":["webpack:///1.chunk.js","webpack:///./src/app/globalServices/api/API_Report.service.ts","webpack:///./src/app/globalServices/api/API_Task.service.ts","webpack:///./src/app/globalServices/api/API_User.service.ts","webpack:///./src/app/globalServices/entitiesDTO/projectDTO.class.ts","webpack:///./src/app/globalServices/entitiesDTO/reportDTO.class.ts","webpack:///./src/app/globalServices/entitiesDTO/serializable.class.ts","webpack:///./src/app/globalServices/entitiesDTO/taskDTO.class.ts","webpack:///./src/app/globalServices/entitiesDTO/userDTO.class.ts","webpack:///./src/app/timeTracker/projects/projectManagement/projectManagement.component.ts","webpack:///./src/app/timeTracker/projects/projectManagement/projectManagement.css","webpack:///./src/app/timeTracker/projects/projectManagement/projectManagement.html","webpack:///./src/app/timeTracker/projects/projects.component.ts","webpack:///./src/app/timeTracker/projects/projects.css","webpack:///./src/app/timeTracker/projects/projects.html","webpack:///./src/app/timeTracker/projects/reportBar/reportBar.component.ts","webpack:///./src/app/timeTracker/projects/reportBar/reportBar.css","webpack:///./src/app/timeTracker/projects/reportBar/reportBar.html","webpack:///./src/app/timeTracker/projects/taskManagement/taskManagement.component.ts","webpack:///./src/app/timeTracker/projects/taskManagement/taskManagement.css","webpack:///./src/app/timeTracker/projects/taskManagement/taskManagement.html"],"names":["webpackJsonp","752","module","exports","__webpack_require__","core_1","http_1","API_Report","http","this","prototype","getJsonHeader","headers","Headers","append","getUrlencodedHeader","correctOffset","offset","replace","createReport","report","workTime","workDate","taskId","utcOffset","params","URLSearchParams","set","transferData","JSON","stringify","post","search","map","res","json","getTaskAllReportList","get","__decorate","Injectable","__metadata","Http","751","API_Task","getProjectHighTaskList","projectId","getCreatedTaskList","createTask","taskName","projectName","name","ancestorProjectId","addTaskExecutor","userId","id","put","changeName","changeStatus","status","changeDescription","description","checkLowLevelAuthorities","754","API_User","getUserList","749","serializable_class_ts_1","ProjectDTO","_super","apply","arguments","taskList","__extends","Serializable","755","ReportDTO","748","fillFromJSON","jsonObj","parse","propName","750","TaskDTO","reportList","756","UserDTO","759","projectDTO_class_1","taskDTO_class_1","API_Project_service_1","API_Task_service_1","dateFormatter_service_1","ProjectManagement","api_Project","api_Task","dateFormatter","taskSelected","EventEmitter","isStatusBarOpen","statusList","accessToChangeProject","showProjectNameInput","showProjectDescriptionTextArea","showTaskNameInput","ngOnInit","openCloseStatusBar","statusBarValue","_this","project","subscribe","data","error","console","log","checkAccessToCreateTask","checkAccessToChangeProject","getUtcOffset","newTask","responseObjects","task","creationDateTime","changeDateTimeToRuWithPattern","push","checkAccessToChangeName","formattedName","trim","length","checkAccessToChangeDescription","formattedDescription","moveToTask","emit","Input","Output","Object","Component","selector","providers","API_Project","directives","pipes","encapsulation","ViewEncapsulation","Native","styles","template","DateFormatter","768","769","465","projectManagement_component_1","taskManagement_component_1","Projects","targetProject","projectList","openProjectBar","openTaskBar","openProjectTaskList","openCreateProject","getUserActiveProjectList","transferProjectListToDTO","pushTransferTaskListToProject","createProject","openCreateProjectSwitch","_body","projectDTOArray","i","newProjectDTO","newTaskDTO","projectOpenCloseSwitch","changeProjectToTaskBar","event","targetTask","TaskManagement","770","771","760","API_Report_service_1","ReportBar","api_Report","createdReport","inputHours","inputMinutes","inputReport","errorMessage","inputDate","getCurrentDate","reportDate","getCurrentMonth","validateData","hours","772","773","761","reportDTO_class_1","userDTO_class_1","reportBar_component_1","API_User_service_1","api_User","userList","showSubTaskNameInput","showTaskDescriptionTextArea","showReportBar","accessToChangeTask","checkAccessToCreateSubTask","openCloseReportBar","pushTransferReportListToProject","reportCreated","newReportDTO","transformTime","pushTransferUserListToListDTO","undefined","selectedUser","newExecutor","executor","userSelected","find","user","selectedUserName","newUserDTO","774","775"],"mappings":"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","file":"1.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 752:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(136);\r\n\t__webpack_require__(219);\r\n\tvar API_Report = (function () {\r\n\t    function API_Report(http) {\r\n\t        this.http = http;\r\n\t    }\r\n\t    API_Report.prototype.getJsonHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/json');\r\n\t        return headers;\r\n\t    };\r\n\t    API_Report.prototype.getUrlencodedHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\t        return headers;\r\n\t    };\r\n\t    API_Report.prototype.correctOffset = function (offset) {\r\n\t        return offset.replace('+', '%2B');\r\n\t    };\r\n\t    API_Report.prototype.createReport = function (report, workTime, workDate, taskId, utcOffset) {\r\n\t        var headers = this.getJsonHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('utcOffset', this.correctOffset(utcOffset));\r\n\t        params.set('taskId', taskId);\r\n\t        var transferData = JSON.stringify({\r\n\t            report: report,\r\n\t            workTime: workTime,\r\n\t            workDate: workDate,\r\n\t        });\r\n\t        return this.http.post('/api/report/createReport', transferData, {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Report.prototype.getTaskAllReportList = function (taskId, utcOffset) {\r\n\t        var headers = this.getJsonHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('utcOffset', this.correctOffset(utcOffset));\r\n\t        params.set('taskId', taskId);\r\n\t        return this.http.get('/api/report/getTaskAllReportList', {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Report = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], API_Report);\r\n\t    return API_Report;\r\n\t}());\r\n\texports.API_Report = API_Report;\r\n\n\n/***/ },\n\n/***/ 751:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(136);\r\n\t__webpack_require__(219);\r\n\tvar API_Task = (function () {\r\n\t    function API_Task(http) {\r\n\t        this.http = http;\r\n\t    }\r\n\t    API_Task.prototype.getJsonHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/json');\r\n\t        return headers;\r\n\t    };\r\n\t    API_Task.prototype.getUrlencodedHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\t        return headers;\r\n\t    };\r\n\t    API_Task.prototype.correctOffset = function (offset) {\r\n\t        return offset.replace('+', '%2B');\r\n\t    };\r\n\t    API_Task.prototype.getProjectHighTaskList = function (projectId, utcOffset) {\r\n\t        var headers = this.getUrlencodedHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('projectId', projectId);\r\n\t        params.set('utcOffset', this.correctOffset(utcOffset));\r\n\t        return this.http.get('/api/task/getProjectHighTaskList', {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.getCreatedTaskList = function (utcOffset) {\r\n\t        var headers = this.getUrlencodedHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('utcOffset', this.correctOffset(utcOffset));\r\n\t        return this.http.get('/api/task/getCreatedTaskList', {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.createTask = function (taskName, projectName, utcOffset) {\r\n\t        var headers = this.getJsonHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('utcOffset', this.correctOffset(utcOffset));\r\n\t        var transferData = JSON.stringify({ name: taskName, ancestorProjectId: projectName });\r\n\t        return this.http.post('/api/task/createTask', transferData, {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.addTaskExecutor = function (taskId, userId) {\r\n\t        var transferData = JSON.stringify({ id: userId });\r\n\t        var headers = this.getJsonHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('taskId', taskId);\r\n\t        return this.http.put('/api/task/addTaskExecutor', transferData, {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.changeName = function (taskId, name) {\r\n\t        var transferData = JSON.stringify({ id: taskId, name: name });\r\n\t        var headers = this.getJsonHeader();\r\n\t        return this.http.put('/api/task/setName', transferData, {\r\n\t            headers: headers\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.changeStatus = function (taskId, status) {\r\n\t        var transferData = JSON.stringify({ id: taskId, status: status });\r\n\t        var headers = this.getJsonHeader();\r\n\t        return this.http.put('/api/task/setStatus', transferData, {\r\n\t            headers: headers\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.changeDescription = function (taskId, description) {\r\n\t        var transferData = JSON.stringify({ id: taskId, description: description });\r\n\t        var headers = this.getJsonHeader();\r\n\t        return this.http.put('/api/task/setDescription', transferData, {\r\n\t            headers: headers\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task.prototype.checkLowLevelAuthorities = function (taskId) {\r\n\t        var headers = this.getUrlencodedHeader();\r\n\t        var params = new http_1.URLSearchParams();\r\n\t        params.set('id', taskId);\r\n\t        return this.http.get('/api/task/checkLowLevelAuthorities', {\r\n\t            headers: headers, search: params\r\n\t        }).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_Task = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], API_Task);\r\n\t    return API_Task;\r\n\t}());\r\n\texports.API_Task = API_Task;\r\n\n\n/***/ },\n\n/***/ 754:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar http_1 = __webpack_require__(136);\r\n\t__webpack_require__(219);\r\n\tvar API_User = (function () {\r\n\t    function API_User(http) {\r\n\t        this.http = http;\r\n\t    }\r\n\t    API_User.prototype.getJsonHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/json');\r\n\t        return headers;\r\n\t    };\r\n\t    API_User.prototype.getUrlencodedHeader = function () {\r\n\t        var headers = new http_1.Headers();\r\n\t        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\t        return headers;\r\n\t    };\r\n\t    API_User.prototype.correctOffset = function (offset) {\r\n\t        return offset.replace('+', '%2B');\r\n\t    };\r\n\t    API_User.prototype.getUserList = function () {\r\n\t        var headers = this.getUrlencodedHeader();\r\n\t        return this.http.get('/api/user/getUserList').map(function (res) { return res.json(); });\r\n\t    };\r\n\t    API_User = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], API_User);\r\n\t    return API_User;\r\n\t}());\r\n\texports.API_User = API_User;\r\n\n\n/***/ },\n\n/***/ 749:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar serializable_class_ts_1 = __webpack_require__(748);\r\n\tvar ProjectDTO = (function (_super) {\r\n\t    __extends(ProjectDTO, _super);\r\n\t    function ProjectDTO() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.taskList = [];\r\n\t    }\r\n\t    return ProjectDTO;\r\n\t}(serializable_class_ts_1.Serializable));\r\n\texports.ProjectDTO = ProjectDTO;\r\n\n\n/***/ },\n\n/***/ 755:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar serializable_class_ts_1 = __webpack_require__(748);\r\n\tvar ReportDTO = (function (_super) {\r\n\t    __extends(ReportDTO, _super);\r\n\t    function ReportDTO() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    return ReportDTO;\r\n\t}(serializable_class_ts_1.Serializable));\r\n\texports.ReportDTO = ReportDTO;\r\n\n\n/***/ },\n\n/***/ 748:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Serializable = (function () {\r\n\t    function Serializable() {\r\n\t    }\r\n\t    Serializable.prototype.fillFromJSON = function (json) {\r\n\t        var jsonObj = JSON.parse(json);\r\n\t        for (var propName in jsonObj)\r\n\t            this[propName] = jsonObj[propName];\r\n\t    };\r\n\t    return Serializable;\r\n\t}());\r\n\texports.Serializable = Serializable;\r\n\n\n/***/ },\n\n/***/ 750:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar serializable_class_ts_1 = __webpack_require__(748);\r\n\tvar TaskDTO = (function (_super) {\r\n\t    __extends(TaskDTO, _super);\r\n\t    function TaskDTO() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.reportList = [];\r\n\t    }\r\n\t    return TaskDTO;\r\n\t}(serializable_class_ts_1.Serializable));\r\n\texports.TaskDTO = TaskDTO;\r\n\n\n/***/ },\n\n/***/ 756:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar serializable_class_ts_1 = __webpack_require__(748);\r\n\tvar UserDTO = (function (_super) {\r\n\t    __extends(UserDTO, _super);\r\n\t    function UserDTO() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    return UserDTO;\r\n\t}(serializable_class_ts_1.Serializable));\r\n\texports.UserDTO = UserDTO;\r\n\n\n/***/ },\n\n/***/ 759:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar projectDTO_class_1 = __webpack_require__(749);\r\n\tvar taskDTO_class_1 = __webpack_require__(750);\r\n\tvar API_Project_service_1 = __webpack_require__(463);\r\n\tvar API_Task_service_1 = __webpack_require__(751);\r\n\tvar dateFormatter_service_1 = __webpack_require__(462);\r\n\tvar ProjectManagement = (function () {\r\n\t    function ProjectManagement(api_Project, api_Task, dateFormatter) {\r\n\t        this.api_Project = api_Project;\r\n\t        this.api_Task = api_Task;\r\n\t        this.dateFormatter = dateFormatter;\r\n\t        this.taskSelected = new core_1.EventEmitter();\r\n\t        this.isStatusBarOpen = false;\r\n\t        this.statusList = ['Active', 'Frozen', 'Complete'];\r\n\t        this.accessToChangeProject = false;\r\n\t        this.showProjectNameInput = false;\r\n\t        this.showProjectDescriptionTextArea = false;\r\n\t        this.showTaskNameInput = false;\r\n\t    }\r\n\t    ProjectManagement.prototype.ngOnInit = function () {\r\n\t    };\r\n\t    ProjectManagement.prototype.openCloseStatusBar = function (status) {\r\n\t        this.statusBarValue = status;\r\n\t        this.isStatusBarOpen = this.isStatusBarOpen == false;\r\n\t    };\r\n\t    ProjectManagement.prototype.changeStatus = function (status) {\r\n\t        var _this = this;\r\n\t        if (this.project.status != status) {\r\n\t            this.api_Project.changeStatus(this.project.id, status).subscribe(function (data) {\r\n\t                _this.project.status = status;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.isStatusBarOpen = this.isStatusBarOpen == false;\r\n\t    };\r\n\t    ProjectManagement.prototype.checkAccessToCreateTask = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeProject) {\r\n\t            this.showTaskNameInput = true;\r\n\t        }\r\n\t        else {\r\n\t            this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function (data) {\r\n\t                console.log(data);\r\n\t                _this.showTaskNameInput = true;\r\n\t                _this.accessToChangeProject = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showTaskNameInput = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    ProjectManagement.prototype.createTask = function (taskName) {\r\n\t        var _this = this;\r\n\t        console.log(taskName);\r\n\t        this.api_Task.createTask(taskName, this.project.id, this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t            var newTask = new taskDTO_class_1.TaskDTO();\r\n\t            newTask.fillFromJSON(JSON.stringify(data.responseObjects.task));\r\n\t            newTask.creationDateTime = _this.dateFormatter\r\n\t                .changeDateTimeToRuWithPattern(newTask.creationDateTime, \"Do MMMM YYYY\");\r\n\t            _this.project.taskList.push(newTask);\r\n\t            console.log(_this.project);\r\n\t            console.log(data);\r\n\t        }, function (error) {\r\n\t            console.log(error);\r\n\t        });\r\n\t    };\r\n\t    ProjectManagement.prototype.checkAccessToChangeName = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeProject)\r\n\t            this.showProjectNameInput = true;\r\n\t        else {\r\n\t            this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function (data) {\r\n\t                console.log(data);\r\n\t                _this.showProjectNameInput = true;\r\n\t                _this.accessToChangeProject = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showProjectNameInput = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    ProjectManagement.prototype.changeName = function (name) {\r\n\t        var _this = this;\r\n\t        var formattedName = name.trim();\r\n\t        if (formattedName.length != 0 &&\r\n\t            formattedName != this.project.name) {\r\n\t            this.api_Project.changeName(this.project.id, name).subscribe(function (data) {\r\n\t                _this.project.name = name;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.showProjectNameInput = false;\r\n\t    };\r\n\t    ProjectManagement.prototype.checkAccessToChangeDescription = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeProject)\r\n\t            this.showProjectDescriptionTextArea = true;\r\n\t        else {\r\n\t            this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function (data) {\r\n\t                _this.showProjectDescriptionTextArea = true;\r\n\t                _this.accessToChangeProject = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showProjectDescriptionTextArea = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    ProjectManagement.prototype.changeDescription = function (description) {\r\n\t        var _this = this;\r\n\t        var formattedDescription = description.trim();\r\n\t        if (formattedDescription.length != 0 &&\r\n\t            formattedDescription != this.project.description) {\r\n\t            this.api_Project.changeDescription(this.project.id, description).subscribe(function (data) {\r\n\t                _this.project.description = description;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.showProjectDescriptionTextArea = false;\r\n\t    };\r\n\t    ProjectManagement.prototype.moveToTask = function (task) {\r\n\t        this.taskSelected.emit({\r\n\t            task: task\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', projectDTO_class_1.ProjectDTO)\r\n\t    ], ProjectManagement.prototype, \"project\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ProjectManagement.prototype, \"taskSelected\", void 0);\r\n\t    ProjectManagement = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'project-management',\r\n\t            providers: [API_Project_service_1.API_Project, API_Task_service_1.API_Task],\r\n\t            directives: [],\r\n\t            pipes: [],\r\n\t            encapsulation: core_1.ViewEncapsulation.Native,\r\n\t            styles: [__webpack_require__(768)],\r\n\t            template: __webpack_require__(769)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [API_Project_service_1.API_Project, API_Task_service_1.API_Task, dateFormatter_service_1.DateFormatter])\r\n\t    ], ProjectManagement);\r\n\t    return ProjectManagement;\r\n\t}());\r\n\texports.ProjectManagement = ProjectManagement;\r\n\n\n/***/ },\n\n/***/ 768:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#management-content {\\n  margin-left: 15px;\\n  width: 100%;\\n  background-color: white;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n}\\n\\n#first-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n  padding: 15px 100px 15px 20px;\\n}\\n\\n#first-level #project-name {\\n  display: inline-block;\\n  font-weight: 300;\\n  font-size: 25px;\\n  color: rgba(26, 177, 136, 1);\\n\\n}\\n\\n#first-level #projectNameInput {\\n  display: inline-block;\\n  font-weight: 100;\\n  font-size: 22px;\\n  width: 100%;\\n}\\n\\n#first-level #creation-date-bar {\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n}\\n\\n#first-level #owner-name-bar {\\n  margin-left: 20px;\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#second-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#second-level #status-bar {\\n  display: inline-block;\\n  padding: 10px 50px 10px 0;\\n  border-left: 6px solid rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#second-level #status-bar span {\\n  padding-left: 10px;\\n  font-weight: 700;\\n}\\n\\n#second-level #drop-status-menu {\\n  z-index: 2;\\n\\n  position: absolute;\\n  width: 100px;\\n  height: 150px;\\n  background-color: white;\\n  border: 1px solid #eaebec;\\n}\\n\\n#second-level #drop-status-menu ul {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\n#second-level #drop-status-menu ul li {\\n  font-weight: 300;\\n  padding: 10px 0 10px 5px;\\n}\\n\\n#second-level #drop-status-menu ul li:hover {\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #add-executor-bar {\\n  display: inline-block;\\n}\\n\\n#second-level #add-executor-bar select {\\n  padding: 5px 20px;\\n  font-size: 15px;\\n  font-weight: 300;\\n  cursor: pointer;\\n}\\n\\n#third-level {\\n  z-index: 1;\\n  display: block;\\n  color: black;\\n  font-weight: 300;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#third-level #select-end-date {\\n  display: inline-block;\\n}\\n\\n#third-level #timer {\\n  display: inline-block;\\n}\\n\\n#third-level #create-task-bar {\\n  padding: 10px 0;\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#third-level #create-task-bar #just-do-it-bar {\\n  font-size: 20px;\\n  cursor: pointer;\\n\\n}\\n\\n#third-level #create-task-bar #taskNameInput {\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n#fourth-level {\\n}\\n\\n#fourth-level #task-list ul {\\n  padding: 0;\\n  margin: 0;\\n  width: auto;\\n  list-style: none;\\n  border-right: 5px solid rgba(26, 177, 136, 1);\\n  border-left: 5px solid rgba(26, 177, 136, 1);\\n}\\n\\n#fourth-level #task-list ul li {\\n  padding: 6px 0;\\n  font-size: 15px;\\n  font-weight: 300;\\n  color: #828282;\\n  background-color: #FAFAFA;\\n  border-top: 1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#fourth-level #task-list ul li:hover {\\n\\n  background-color: rgba(26, 177, 136, 0.8);\\n  color: white;\\n\\n  -moz-transition: all 0.5s ease-out 0s;\\n  -webkit-transition: all 0.5s ease-out 0s;\\n  transition: all 0.5s ease-out 0s;\\n}\\n\\n#fourth-level #task-list ul li span {\\n  margin-left: 15px;\\n}\\n\\n#fifth-level {\\n  border-top: 1px solid #eaebec;\\n\\n}\\n#fifth-level #description-span {\\n  display: block;\\n  padding: 10px 0 5px 20px;\\n  font-size: 20px;\\n  font-weight: 200;\\n}\\n#fifth-level #description {\\n  padding: 5px 20px 20px 20px;\\n  min-width: 200px;\\n  min-height: 200px;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#fifth-level textarea {\\n  padding: 5px 20px 20px 20px;\\n  font-size: 17px;\\n  min-width: 460px;\\n  min-height: 250px;\\n}\\n\\n\"\n\n/***/ },\n\n/***/ 769:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"management-content\\\">\\n  <div id=\\\"first-level\\\">\\n    <div id=\\\"name-bar\\\"\\n         (click)=\\\"checkAccessToChangeName()\\\">\\n      <span id=\\\"project-name\\\"\\n            *ngIf=\\\"!showProjectNameInput\\\">\\n        {{project.name}}\\n      </span>\\n      <md-input id=\\\"projectNameInput\\\"\\n                *ngIf=\\\"showProjectNameInput\\\"\\n                #name [value]=\\\"project.name\\\"\\n                (keydown.enter)=\\\"changeName(name.value)\\\"\\n                (mouseleave)=\\\"changeName(name.value)\\\">\\n      </md-input>\\n    </div>\\n\\n    <div id=\\\"creation-date-bar\\\">\\n      Создан: {{project.creationDateTime}}\\n    </div>\\n\\n    <div id=\\\"owner-name-bar\\\">\\n      ( Владелец : {{project.owner.name}} )\\n    </div>\\n  </div>\\n\\n  <div id=\\\"second-level\\\">\\n    <div id=\\\"status-bar\\\">\\n      <div (click)=\\\"openCloseStatusBar()\\\">\\n        <span>{{project.status}}</span>\\n        <img src=\\\"https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png\\\" width=\\\"5%\\\">\\n      </div>\\n      <div *ngIf=\\\" isStatusBarOpen\\\" id=\\\"drop-status-menu\\\"\\n           (mouseleave)=\\\"openCloseStatusBar()\\\">\\n        <ul>\\n          <li *ngFor=\\\"let status of statusList\\\"\\n              (click)=\\\"changeStatus(status)\\\">\\n            {{status}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"add-executor-bar\\\">\\n      <select>\\n        <option selected> Добавить пользователя</option>\\n        <option>Миша</option>\\n        <option>Вася</option>\\n      </select>\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"third-level\\\">\\n    <!--  <div id=\\\"select-end-date\\\">\\n        <span>Выбрать дату окончания</span>\\n      </div>-->\\n    <div id=\\\"add-task\\\">\\n\\n      <div id=\\\"create-task-bar\\\"\\n           (click)=\\\"checkAccessToCreateTask()\\\">\\n      <span id=\\\"just-do-it-bar\\\"\\n            *ngIf=\\\"!showTaskNameInput\\\">\\n        + Добавить задачу\\n      </span>\\n        <md-input id=\\\"taskNameInput\\\"\\n                  *ngIf=\\\"showTaskNameInput\\\"\\n                  #taskName\\n                  (keydown.enter)=\\\"createTask(taskName.value)\\\"\\n                  (mouseleave)=\\\"showTaskNameInput=false\\\">\\n        </md-input>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"fourth-level\\\">\\n    <div id=\\\"task-list\\\">\\n      <ul>\\n        <li *ngFor=\\\"let task of project.taskList\\\"\\n        (click)=\\\"moveToTask(task)\\\">\\n          <span>{{task.name}}</span>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n\\n\\n  <div id=\\\"fifth-level\\\">\\n    <span id=\\\"description-span\\\">Описание:</span>\\n    <div id=\\\"project-description\\\">\\n      <div id=\\\"description\\\"\\n           *ngIf=\\\"!showProjectDescriptionTextArea\\\"\\n           (click)=\\\"checkAccessToChangeDescription()\\\">\\n        <span *ngIf=\\\"project.description==undefined ||project.description.length==0 \\\">\\n          Заполнить описание\\n        </span>\\n        <span\\n          *ngIf=\\\"project.description!=undefined\\\">\\n          {{project.description}}\\n        </span>\\n      </div>\\n\\n      <div id=\\\"descriptionTextArea\\\"\\n           *ngIf=\\\"showProjectDescriptionTextArea\\\">\\n        <textarea #descr [value]=\\\"project.description\\\"\\n                  (keydown.enter)=\\\"changeDescription(descr.value)\\\"\\n                  (mouseleave)=\\\"changeDescription(descr.value)\\\">\\n        </textarea>\\n        <!--<button md-raised-button class=\\\"md-raised md-primary\\\"-->\\n        <!--(click)=\\\"changeDescription(descr.value)\\\">Изменить-->\\n        <!--</button>-->\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n/***/ },\n\n/***/ 465:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar projectManagement_component_1 = __webpack_require__(759);\r\n\tvar taskManagement_component_1 = __webpack_require__(761);\r\n\tvar projectDTO_class_1 = __webpack_require__(749);\r\n\tvar taskDTO_class_1 = __webpack_require__(750);\r\n\tvar API_Project_service_1 = __webpack_require__(463);\r\n\tvar API_Task_service_1 = __webpack_require__(751);\r\n\tvar dateFormatter_service_1 = __webpack_require__(462);\r\n\t/*import {Calendar} from '../globalServices/datePicker/calendar.component'*/\r\n\tvar Projects = (function () {\r\n\t    function Projects(api_Project, api_Task, dateFormatter) {\r\n\t        this.api_Project = api_Project;\r\n\t        this.api_Task = api_Task;\r\n\t        this.dateFormatter = dateFormatter;\r\n\t        this.targetProject = new projectDTO_class_1.ProjectDTO();\r\n\t        this.projectList = [];\r\n\t        this.openProjectBar = false;\r\n\t        this.openTaskBar = false;\r\n\t        this.openProjectTaskList = false;\r\n\t        this.openCreateProject = false;\r\n\t    }\r\n\t    Projects.prototype.ngOnInit = function () {\r\n\t        this.getUserActiveProjectList();\r\n\t    };\r\n\t    /** Возвращает активные проекты пользователя*/\r\n\t    Projects.prototype.getUserActiveProjectList = function () {\r\n\t        var _this = this;\r\n\t        this.api_Project.getUserActiveProjectList(this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t            if (data.responseObjects.projectList.length != 0)\r\n\t                _this.projectList = _this.transferProjectListToDTO(data.responseObjects.projectList);\r\n\t        }, function (error) {\r\n\t            console.log(error);\r\n\t        });\r\n\t    };\r\n\t    /** Возвращает задачи пользователя(Т.к есть разделения на подзадачи)*/\r\n\t    Projects.prototype.getProjectHighTaskList = function () {\r\n\t        var _this = this;\r\n\t        this.api_Task.getProjectHighTaskList(this.targetProject.id, this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t            _this.pushTransferTaskListToProject(data.responseObjects.taskList);\r\n\t            console.log(data);\r\n\t        }, function (error) {\r\n\t            console.log(error);\r\n\t        });\r\n\t    };\r\n\t    Projects.prototype.createProject = function () {\r\n\t        var _this = this;\r\n\t        this.api_Project.createProject(this.projectName, this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t            _this.targetProject.fillFromJSON(JSON.stringify(data.responseObjects.project));\r\n\t            _this.targetProject.creationDateTime = _this.dateFormatter\r\n\t                .changeDateTimeToRuWithPattern(_this.targetProject.creationDateTime, \"Do MMMM YYYY\");\r\n\t            _this.projectList.push(_this.targetProject);\r\n\t            _this.openProjectBar = true;\r\n\t            _this.openCreateProjectSwitch();\r\n\t        }, function (error) {\r\n\t            console.log(error);\r\n\t            console.log(error._body);\r\n\t        });\r\n\t    };\r\n\t    /** Трансформирует входящий массив проектов в DTO объект, с изменением формата времени*/\r\n\t    Projects.prototype.transferProjectListToDTO = function (data) {\r\n\t        var projectDTOArray = [];\r\n\t        for (var i = 0; i < data.length; i++) {\r\n\t            var newProjectDTO = new projectDTO_class_1.ProjectDTO();\r\n\t            newProjectDTO.fillFromJSON(JSON.stringify(data[i]));\r\n\t            newProjectDTO.creationDateTime = this.dateFormatter\r\n\t                .changeDateTimeToRuWithPattern(newProjectDTO.creationDateTime, \"Do MMMM YYYY\");\r\n\t            projectDTOArray.push(newProjectDTO);\r\n\t        }\r\n\t        return projectDTOArray;\r\n\t    };\r\n\t    /** Трансформирует входящий массив задач в DTO объект, с изменением формата времени*/\r\n\t    Projects.prototype.pushTransferTaskListToProject = function (data) {\r\n\t        for (var i = 0; i < data.length; i++) {\r\n\t            var newTaskDTO = new taskDTO_class_1.TaskDTO();\r\n\t            newTaskDTO.fillFromJSON(JSON.stringify(data[i]));\r\n\t            newTaskDTO.creationDateTime = this.dateFormatter\r\n\t                .changeDateTimeToRuWithPattern(newTaskDTO.creationDateTime, \"Do MMMM YYYY\");\r\n\t            this.targetProject.taskList.push(newTaskDTO);\r\n\t        }\r\n\t    };\r\n\t    Projects.prototype.projectOpenCloseSwitch = function (project) {\r\n\t        this.openProjectBar = true;\r\n\t        this.openTaskBar = false;\r\n\t        this.openProjectTaskList = false;\r\n\t        this.targetProject = project;\r\n\t        if (this.targetProject.taskList.length == 0)\r\n\t            this.getProjectHighTaskList();\r\n\t    };\r\n\t    Projects.prototype.openCreateProjectSwitch = function () {\r\n\t        this.openCreateProject = this.openCreateProject == false;\r\n\t    };\r\n\t    Projects.prototype.changeProjectToTaskBar = function (event) {\r\n\t        this.openProjectTaskList = true;\r\n\t        this.openProjectBar = false;\r\n\t        this.openTaskBar = true;\r\n\t        this.targetTask = event.task;\r\n\t    };\r\n\t    Projects = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'projects',\r\n\t            providers: [API_Project_service_1.API_Project, API_Task_service_1.API_Task],\r\n\t            directives: [projectManagement_component_1.ProjectManagement, taskManagement_component_1.TaskManagement],\r\n\t            pipes: [],\r\n\t            encapsulation: core_1.ViewEncapsulation.Native,\r\n\t            styles: [__webpack_require__(770)],\r\n\t            template: __webpack_require__(771)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [API_Project_service_1.API_Project, API_Task_service_1.API_Task, dateFormatter_service_1.DateFormatter])\r\n\t    ], Projects);\r\n\t    return Projects;\r\n\t}());\r\n\texports.Projects = Projects;\r\n\n\n/***/ },\n\n/***/ 770:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#projects-content {\\n  float: left;\\n  margin: 20px;\\n  height: 100%;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n\\n}\\n\\n#projects-list-bar {\\n  float: left;\\n  display: inline-block;\\n  width: 400px;\\n  height: 100%;\\n  background-color: white;\\n}\\n\\n#projects-menu ul {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n#projects-menu ul li {\\n  list-style: none;\\n  display: inline-block;\\n  padding: 5px 10px;\\n  margin-right: 10px;\\n  font-size: 13px;\\n  color: #6b99c7;\\n  cursor: pointer;\\n}\\n\\n#projects-menu ul li:hover {\\n  background-color: #f5f8fc;\\n}\\n\\n#project-list {\\n  display: block;\\n}\\n\\n#project-list #create-project-button  {\\n  padding: 10px;\\n  margin: 0 0;\\n  cursor: pointer;\\n}\\n\\n#project-list #create-project-button #plus-part {\\n  display: inline-block;\\n  color: #6b99c7;\\n  font-size: 25px;\\n  font-weight: bold;\\n}\\n\\n#project-list #create-project-button #create-part {\\n  display: inline-block;\\n  color: #6b99c7;\\n  font-size: 15px;\\n}\\n\\n#create-project-button div:hover {\\n  background-color: #f5f8fc;\\n}\\n\\n#project-list #create-project-button form {\\n  padding: 10px;\\n  margin: 0 0;\\n}\\n\\n#project-list #create-project-button input {\\n  padding: 5px 25px;\\n}\\n#project-list #create-project-button button {\\n  background-color: rgba(26, 177, 136, 1);\\n }\\n\\n#project-list ul {\\n  padding: 0;\\n  margin: 0;\\n  display: block;\\n  list-style: none;\\n}\\n\\n#project-list li {\\n  padding: 10px 0;\\n  border-top:   1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#project-list li:hover {\\n background-color: aliceblue;\\n}\\n\\n\\n#project-list li span {\\n  padding-left: 40px;\\n  color: #515151;\\n  font-weight: 400;\\n}\\n\\n\\n#project-list #task-list li {\\n  padding: 5px 0;\\n  border-top:  1px solid #eaebec;\\n  font-size: 15px;\\n  background-color: #929292;\\n}\\n\\n#project-list #task-list li span {\\n  padding-left: 60px;\\n  color: #515151;\\n  font-weight: 300;\\n}\\n\\n#project-list #task-list li:hover {\\n  background-color: aliceblue;\\n}\\n\\n\\n#project-task-management {\\n  display: inline-block;\\n  float: left;\\n}\\n\\n\\n\"\n\n/***/ },\n\n/***/ 771:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"projects-content\\\">\\n\\n  <div id=\\\"projects-list-bar\\\">\\n\\n    <div id=\\\"projects-menu\\\">\\n      <ul>\\n        <li>Активные</li>\\n        <li>Законченные</li>\\n        <li>Поиск проектов</li>\\n      </ul>\\n    </div>\\n\\n\\n    <div id=\\\"project-list\\\">\\n      <div id=\\\"create-project-button\\\">\\n        <div *ngIf=\\\"!openCreateProject\\\" (click)=\\\"openCreateProjectSwitch()\\\">\\n          <span id=\\\"plus-part\\\">+</span>\\n          <span id=\\\"create-part\\\">Создать проект</span>\\n        </div>\\n        <form *ngIf=\\\"openCreateProject\\\" (blur)=\\\"openCreateProjectSwitch()\\\">\\n          <input md-input [(ngModel)]=\\\"projectName\\\"\\n                 placeholder=\\\"Введите название проекта\\\" type=\\\"text\\\">\\n          <button md-raised-button class=\\\"md-raised md-primary\\\"\\n                  (click)=\\\"createProject()\\\">Подтвердить\\n          </button>\\n        </form>\\n      </div>\\n      <ul>\\n        <li *ngIf=\\\"projectList.length==0\\\">\\n          <span>У вас нет ни одного проекта</span>\\n        </li>\\n        <li *ngFor=\\\"let project of projectList\\\"\\n            (click)=\\\"projectOpenCloseSwitch(project)\\\">\\n          <span id=\\\"project-name\\\">{{project.name}}</span>\\n\\n          <div id=\\\"task-list\\\" *ngIf=\\\"openProjectTaskList\\\">\\n            <ul *ngIf=\\\"targetProject.name==project.name &&\\n             targetTask!=undefined\\\">\\n              <li *ngFor=\\\"let task of project.taskList\\\">\\n               <span>{{task.name}}</span>\\n              </li>\\n            </ul>\\n          </div>\\n        </li>\\n      </ul>\\n      <!-- <div id=\\\"create-task-button\\\">\\n      <div><span>+</span> Создать задачу</div>\\n    </div>-->\\n    </div>\\n  </div>\\n  <div id=\\\"project-task-management\\\">\\n    <project-management *ngIf=\\\"openProjectBar\\\"\\n                        [project]=\\\"targetProject\\\"\\n                        (taskSelected)=\\\"changeProjectToTaskBar($event)\\\">\\n\\n    </project-management>\\n\\n    <task-management *ngIf=\\\"openTaskBar\\\"\\n                     [task]=\\\"targetTask\\\">\\n\\n    </task-management>\\n  </div>\\n\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 760:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar taskDTO_class_1 = __webpack_require__(750);\r\n\tvar API_Report_service_1 = __webpack_require__(752);\r\n\tvar dateFormatter_service_1 = __webpack_require__(462);\r\n\tvar ReportBar = (function () {\r\n\t    function ReportBar(api_Report, dateFormatter) {\r\n\t        this.api_Report = api_Report;\r\n\t        this.dateFormatter = dateFormatter;\r\n\t        this.createdReport = new core_1.EventEmitter();\r\n\t        this.inputHours = '';\r\n\t        this.inputMinutes = '';\r\n\t        this.inputReport = '';\r\n\t        this.errorMessage = '';\r\n\t    }\r\n\t    ReportBar.prototype.ngOnInit = function () {\r\n\t        this.inputDate = this.dateFormatter.getCurrentDate();\r\n\t        this.reportDate = this.dateFormatter.getCurrentMonth();\r\n\t    };\r\n\t    ReportBar.prototype.createReport = function () {\r\n\t        var _this = this;\r\n\t        if (this.validateData()) {\r\n\t            this.inputHours = this.inputHours.length == 1 ? '0' + this.inputHours : this.inputHours;\r\n\t            this.inputMinutes = this.inputMinutes.length == 1 ? '0' + this.inputMinutes : this.inputMinutes;\r\n\t            var workTime = this.inputHours + ':' + this.inputMinutes;\r\n\t            this.api_Report.createReport(this.inputReport, workTime, this.inputDate, this.task.id, this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t                _this.createdReport.emit({\r\n\t                    report: data.responseObjects.report\r\n\t                });\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    ReportBar.prototype.validateData = function () {\r\n\t        if (this.inputHours.length == 0 || this.inputMinutes.length == 0) {\r\n\t            this.errorMessage = 'Заполните время работы';\r\n\t            return false;\r\n\t        }\r\n\t        var hours = +this.inputHours;\r\n\t        var inputMinutes = +this.inputMinutes;\r\n\t        if (hours > 24) {\r\n\t            this.errorMessage = 'Часов не может быть больше 24';\r\n\t            return false;\r\n\t        }\r\n\t        if (inputMinutes > 60) {\r\n\t            this.errorMessage = 'Минут не может быть больше 60';\r\n\t            return false;\r\n\t        }\r\n\t        if (this.inputReport.trim().length == 0) {\r\n\t            this.errorMessage = 'Необходимо заполнить отчет';\r\n\t            return false;\r\n\t        }\r\n\t        return true;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', taskDTO_class_1.TaskDTO)\r\n\t    ], ReportBar.prototype, \"task\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ReportBar.prototype, \"createdReport\", void 0);\r\n\t    ReportBar = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'report-bar',\r\n\t            providers: [API_Report_service_1.API_Report],\r\n\t            directives: [],\r\n\t            pipes: [],\r\n\t            styles: [__webpack_require__(772)],\r\n\t            template: __webpack_require__(773)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [API_Report_service_1.API_Report, dateFormatter_service_1.DateFormatter])\r\n\t    ], ReportBar);\r\n\t    return ReportBar;\r\n\t}());\r\n\texports.ReportBar = ReportBar;\r\n\n\n/***/ },\n\n/***/ 772:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#report-bar-container {\\n  background-color: white;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\n}\\n\\n#report-bar-container #report-bar-indent {\\n  padding: 15px;\\n}\\n\\n#report-bar-container #report-bar-timer {\\n  display: inline-block;\\n  font: 24px/32px 'Tahoma', sans-serif;\\n}\\n\\n#report-bar-container #report-bar-timer input {\\n  width: 25px;\\n  height: 40px;\\n  border: 1px solid #d9d9d9;\\n  font: 24px/32px 'Tahoma', sans-serif;\\n  text-align: right;\\n  padding: 0 3px;\\n  vertical-align: middle;\\n}\\n\\n#report-bar-container #report-bar-calendar {\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#report-bar-container #report-bar-textarea {\\n  margin-top: 10px;\\n  display: block;\\n}\\n\\n#report-bar-container #report-bar-textarea textarea {\\n  width: 300px;\\n  height: 140px;\\n  font-size: 21px;\\n  font-weight: 100;\\n}\\n\\n#report-bar-container #errorMessage {\\n  display: block;\\n  font-size: 13px;\\n  color: darkred;\\n}\\n\\n#report-bar-container #mega-calendar {\\n  color: rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#report-bar-container #mega-calendar:hover {\\n  color: rgba(26, 177, 136, 0.8);\\n}\\n\\n#report-bar-container #report-bar-send-report button {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n\\n\"\n\n/***/ },\n\n/***/ 773:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\n<div id=\\\"report-bar-container\\\">\\n\\n  <div id=\\\"report-bar-indent\\\">\\n    <div id=\\\"report-bar-header\\\">\\n      <span>Часы</span>\\n      <span>Минуты</span>\\n      <div id=\\\"report-bar-timer\\\">\\n        <input id=\\\"hours\\\" [(ngModel)]=\\\"inputHours\\\" maxlength=\\\"2\\\"\\n               onkeyup=\\\"this.value = this.value.replace (/[^0-9]/, '')\\\">\\n        <span id=\\\"report-bar-timer-colon\\\">:</span>\\n        <input id=\\\"minutes\\\" [(ngModel)]=\\\"inputMinutes\\\" maxlength=\\\"2\\\"\\n               onkeyup=\\\"this.value = this.value.replace (/[^0-9]/, '')\\\">\\n      </div>\\n\\n        <div id=\\\"mega-calendar\\\">\\n            <span>За {{reportDate}}</span>\\n        </div>\\n\\n    </div>\\n\\n    <div id=\\\"report-bar-textarea\\\">\\n    <textarea [(ngModel)]=\\\"inputReport\\\">\\n\\n    </textarea>\\n      <span id=\\\"errorMessage\\\" *ngIf=\\\"errorMessage.length!=0\\\">\\n        {{errorMessage}}\\n      </span>\\n    </div>\\n\\n    <div id=\\\"report-bar-send-report\\\">\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n      (click)=\\\"createReport()\\\">Добавить отчет\\n      </button>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 761:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar taskDTO_class_1 = __webpack_require__(750);\r\n\tvar reportDTO_class_1 = __webpack_require__(755);\r\n\tvar userDTO_class_1 = __webpack_require__(756);\r\n\tvar reportBar_component_1 = __webpack_require__(760);\r\n\tvar API_Task_service_1 = __webpack_require__(751);\r\n\tvar API_Report_service_1 = __webpack_require__(752);\r\n\tvar API_User_service_1 = __webpack_require__(754);\r\n\tvar dateFormatter_service_1 = __webpack_require__(462);\r\n\tvar TaskManagement = (function () {\r\n\t    function TaskManagement(api_Task, api_Report, api_User, dateFormatter) {\r\n\t        this.api_Task = api_Task;\r\n\t        this.api_Report = api_Report;\r\n\t        this.api_User = api_User;\r\n\t        this.dateFormatter = dateFormatter;\r\n\t        this.userList = [];\r\n\t        this.isStatusBarOpen = false;\r\n\t        this.showTaskNameInput = false;\r\n\t        this.showSubTaskNameInput = false;\r\n\t        this.showTaskDescriptionTextArea = false;\r\n\t        this.showReportBar = false;\r\n\t        this.accessToChangeTask = false;\r\n\t        this.statusList = ['Active', 'Frozen', 'New', 'Complete'];\r\n\t    }\r\n\t    TaskManagement.prototype.ngOnInit = function () {\r\n\t        this.getTaskAllReportList();\r\n\t        this.getUserList();\r\n\t    };\r\n\t    TaskManagement.prototype.changeName = function (name) {\r\n\t        var _this = this;\r\n\t        var formattedName = name.trim();\r\n\t        if (formattedName.length != 0 &&\r\n\t            formattedName != this.task.name) {\r\n\t            this.api_Task.changeName(this.task.id, name).subscribe(function (data) {\r\n\t                _this.task.name = name;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.showTaskNameInput = false;\r\n\t    };\r\n\t    TaskManagement.prototype.checkAccessToChangeName = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeTask)\r\n\t            this.showTaskNameInput = true;\r\n\t        else {\r\n\t            this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function (data) {\r\n\t                console.log(data);\r\n\t                _this.showTaskNameInput = true;\r\n\t                _this.accessToChangeTask = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showTaskNameInput = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.changeStatus = function (status) {\r\n\t        var _this = this;\r\n\t        if (this.task.status != status) {\r\n\t            this.api_Task.changeStatus(this.task.id, status).subscribe(function (data) {\r\n\t                _this.task.status = status;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.isStatusBarOpen = this.isStatusBarOpen == false;\r\n\t    };\r\n\t    TaskManagement.prototype.checkAccessToCreateSubTask = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeTask) {\r\n\t            this.showSubTaskNameInput = true;\r\n\t        }\r\n\t        else {\r\n\t            this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function (data) {\r\n\t                console.log(data);\r\n\t                _this.showSubTaskNameInput = true;\r\n\t                _this.accessToChangeTask = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showSubTaskNameInput = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.changeDescription = function (description) {\r\n\t        var _this = this;\r\n\t        var formattedDescription = description.trim();\r\n\t        if (formattedDescription.length != 0 &&\r\n\t            formattedDescription != this.task.description) {\r\n\t            this.api_Task.changeDescription(this.task.id, description).subscribe(function (data) {\r\n\t                _this.task.description = description;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        this.showTaskDescriptionTextArea = false;\r\n\t    };\r\n\t    TaskManagement.prototype.checkAccessToChangeDescription = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeTask)\r\n\t            this.showTaskDescriptionTextArea = true;\r\n\t        else {\r\n\t            this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function (data) {\r\n\t                _this.showTaskDescriptionTextArea = true;\r\n\t                _this.accessToChangeTask = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showTaskDescriptionTextArea = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.openCloseStatusBar = function (status) {\r\n\t        this.statusBarValue = status;\r\n\t        this.isStatusBarOpen = this.isStatusBarOpen == false;\r\n\t    };\r\n\t    TaskManagement.prototype.openCloseReportBar = function () {\r\n\t        var _this = this;\r\n\t        if (this.accessToChangeTask) {\r\n\t            this.showReportBar = this.showReportBar == false;\r\n\t        }\r\n\t        else {\r\n\t            this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function (data) {\r\n\t                _this.showReportBar = true;\r\n\t                _this.accessToChangeTask = true;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t                _this.showReportBar = false;\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.getTaskAllReportList = function () {\r\n\t        var _this = this;\r\n\t        this.api_Report.getTaskAllReportList(this.task.id, this.dateFormatter.getUtcOffset()).subscribe(function (data) {\r\n\t            console.log(data);\r\n\t            _this.pushTransferReportListToProject(data.responseObjects.reportList);\r\n\t        }, function (error) {\r\n\t            console.log(error);\r\n\t        });\r\n\t    };\r\n\t    TaskManagement.prototype.reportCreated = function (event) {\r\n\t        this.showReportBar = false;\r\n\t        console.log(event);\r\n\t    };\r\n\t    /** Трансформирует входящий массив отчетов в DTO объект, с изменением формата времени*/\r\n\t    TaskManagement.prototype.pushTransferReportListToProject = function (data) {\r\n\t        for (var i = 0; i < data.length; i++) {\r\n\t            var newReportDTO = new reportDTO_class_1.ReportDTO();\r\n\t            newReportDTO.fillFromJSON(JSON.stringify(data[i]));\r\n\t            newReportDTO.workTime = this.dateFormatter.transformTime(newReportDTO.workTime);\r\n\t            newReportDTO.creationDateTime = this.dateFormatter\r\n\t                .changeDateTimeToRuWithPattern(newReportDTO.creationDateTime, \"Do MMMM YYYY\");\r\n\t            this.task.reportList.push(newReportDTO);\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.getUserList = function () {\r\n\t        var _this = this;\r\n\t        if (this.userList.length == 0) {\r\n\t            this.api_User.getUserList().subscribe(function (data) {\r\n\t                _this.pushTransferUserListToListDTO(data.responseObjects.userList);\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    TaskManagement.prototype.addTaskExecutor = function () {\r\n\t        var _this = this;\r\n\t        if (this.selectedUser != undefined) {\r\n\t            this.api_Task.addTaskExecutor(this.task.id, this.selectedUser.id).subscribe(function (data) {\r\n\t                console.log(data);\r\n\t                var newExecutor = new userDTO_class_1.UserDTO();\r\n\t                newExecutor.fillFromJSON(JSON.stringify(data.responseObjects.executor));\r\n\t                _this.task.executor = newExecutor;\r\n\t            }, function (error) {\r\n\t                console.log(error);\r\n\t            });\r\n\t        }\r\n\t        else\r\n\t            console.log('Необходимо выбрать исполнителя перед отправкой');\r\n\t    };\r\n\t    TaskManagement.prototype.userSelected = function () {\r\n\t        var _this = this;\r\n\t        this.selectedUser = this.userList.find(function (user) { return user.name === _this.selectedUserName; });\r\n\t    };\r\n\t    TaskManagement.prototype.pushTransferUserListToListDTO = function (data) {\r\n\t        for (var i = 0; i < data.length; i++) {\r\n\t            var newUserDTO = new userDTO_class_1.UserDTO();\r\n\t            newUserDTO.fillFromJSON(JSON.stringify(data[i]));\r\n\t            this.userList.push(newUserDTO);\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', taskDTO_class_1.TaskDTO)\r\n\t    ], TaskManagement.prototype, \"task\", void 0);\r\n\t    TaskManagement = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'task-management',\r\n\t            providers: [API_Task_service_1.API_Task, API_Report_service_1.API_Report, API_User_service_1.API_User],\r\n\t            directives: [reportBar_component_1.ReportBar],\r\n\t            pipes: [],\r\n\t            styles: [__webpack_require__(774)],\r\n\t            template: __webpack_require__(775)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [API_Task_service_1.API_Task, API_Report_service_1.API_Report, API_User_service_1.API_User, dateFormatter_service_1.DateFormatter])\r\n\t    ], TaskManagement);\r\n\t    return TaskManagement;\r\n\t}());\r\n\texports.TaskManagement = TaskManagement;\r\n\n\n/***/ },\n\n/***/ 774:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#management-content {\\n  margin-left: 15px;\\n  width: 100%;\\n  background-color: white;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n}\\n\\n#first-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n  padding: 15px 100px 15px 20px;\\n}\\n\\n#first-level #task-name {\\n  display: inline-block;\\n  font-weight: 300;\\n  font-size: 25px;\\n  color: rgba(26, 177, 136, 1);;\\n\\n}\\n\\n#first-level #taskNameInput {\\n  display: inline-block;\\n  font-weight: 100;\\n  font-size: 22px;\\n  width: 100%;\\n}\\n\\n#first-level #creation-date-bar {\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n}\\n\\n#first-level #owner-name-bar {\\n  margin-left: 20px;\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#first-level #executor-name-bar {\\n  margin-left: 20px;\\n  display: block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#second-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#second-level #status-bar {\\n  display: inline-block;\\n  padding: 10px 10px 10px 0;\\n  border-left: 6px solid rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#second-level #status-bar span {\\n  padding-left: 10px;\\n  font-weight: 700;\\n}\\n\\n#second-level #drop-status-menu {\\n  z-index: 2;\\n\\n  position: absolute;\\n  width: 100px;\\n  height: 180px;\\n  background-color: white;\\n  border: 1px solid #eaebec;\\n}\\n\\n#second-level #drop-status-menu ul {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\n#second-level #drop-status-menu ul li {\\n  font-weight: 300;\\n  padding: 10px 0 10px 5px;\\n}\\n\\n#second-level #drop-status-menu ul li:hover {\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #drop-report-menu  {\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#second-level #drop-report-menu button  {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #drop-report-menu button:hover {\\n  background-color: rgba(26, 177, 136, 0.8);\\n}\\n\\n#second-level #add-executor-bar {\\n  display: inline-block;\\n}\\n#second-level #add-executor-bar button {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n#second-level #create-report-bar{\\n  position: absolute;\\n  left: 780px;\\n  top: 240px;\\n}\\n\\n#second-level #add-executor-bar select {\\n  padding: 5px 20px;\\n  font-size: 15px;\\n  font-weight: 300;\\n  cursor: pointer;\\n}\\n\\n#third-level {\\n  z-index: 1;\\n  display: block;\\n  color: black;\\n  font-weight: 300;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#third-level #select-end-date {\\n  display: inline-block;\\n}\\n\\n#third-level #timer {\\n  display: inline-block;\\n}\\n\\n#third-level #create-sub-task-bar {\\n  padding: 10px 0;\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#third-level #create-sub-task-bar #just-do-it-bar {\\n  font-size: 20px;\\n  cursor: pointer;\\n\\n}\\n\\n#third-level #create-sub-task-bar #subTaskNameInput {\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n#fourth-level {\\n}\\n\\n#fourth-level #sub-task-list ul {\\n  padding: 0;\\n  margin: 0;\\n  width: auto;\\n  list-style: none;\\n  border-right: 5px solid rgba(26, 177, 136, 1);\\n  border-left: 5px solid rgba(26, 177, 136, 1);\\n}\\n\\n#fourth-level #sub-task-list ul li {\\n  padding: 6px 0;\\n  font-size: 15px;\\n  font-weight: 300;\\n  color: #828282;\\n  background-color: #FAFAFA;\\n  border-top: 1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#fourth-level #sub-task-list ul li:hover {\\n\\n  background-color: rgba(26, 177, 136, 0.8);\\n  color: white;\\n\\n  -moz-transition: all 0.5s ease-out 0s;\\n  -webkit-transition: all 0.5s ease-out 0s;\\n  transition: all 0.5s ease-out 0s;\\n}\\n\\n#fourth-level #sub-task-list ul li span {\\n  margin-left: 15px;\\n}\\n\\n#fifth-level {\\n  border-top: 1px solid #eaebec;\\n\\n}\\n#fifth-level #description-span {\\n  display: block;\\n  padding: 10px 0 5px 20px;\\n  font-size: 20px;\\n  font-weight: 200;\\n}\\n#fifth-level #description {\\n  padding: 5px 20px 20px 20px;\\n  min-width: 200px;\\n  min-height: 200px;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#fifth-level textarea {\\n  padding: 5px 20px 20px 20px;\\n  font-size: 17px;\\n  min-width: 460px;\\n  min-height: 250px;\\n}\\n\\n#sixth-level{\\n  display: block;\\n}\\n\\n#sixth-level #report-bar{\\n  display: block;\\n}\\n\\n#sixth-level #report-bar ul{\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#sixth-level #report-bar ul li {\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#sixth-level #report-bar ul li #report-bar-header {\\n  padding: 5px 0;\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#sixth-level #report-bar ul li #author{\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 16px;\\n}\\n\\n#sixth-level #report-bar ul li #creation-date{\\n  float: right;\\n  display: inline-block;\\n  margin-right: 5px;\\n  font-size: 16px;\\n}\\n\\n#sixth-level #report-bar ul li #report{\\n  min-height: 50px;\\n  display:block;\\n  margin: 10px;\\n  font-size: 18px;\\n}\\n\\n#sixth-level #report-bar ul li #spend-time{\\n  display:block;\\n  margin: 0 0 5px 10px;\\n  font-size: 15px;\\n  color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n/***/ },\n\n/***/ 775:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"management-content\\\">\\n  <div id=\\\"first-level\\\">\\n    <div id=\\\"name-bar\\\"\\n         (click)=\\\"checkAccessToChangeName()\\\">\\n      <span id=\\\"task-name\\\"\\n            *ngIf=\\\"!showTaskNameInput\\\">\\n        {{task.name}}\\n      </span>\\n      <md-input id=\\\"taskNameInput\\\"\\n                *ngIf=\\\"showTaskNameInput\\\"\\n                #name [value]=\\\"task.name\\\"\\n                (keydown.enter)=\\\"changeName(name.value)\\\"\\n                (mouseleave)=\\\"changeName(name.value)\\\">\\n      </md-input>\\n    </div>\\n\\n    <div id=\\\"creation-date-bar\\\">\\n      Создана: {{task.creationDateTime}}\\n    </div>\\n\\n    <div id=\\\"owner-name-bar\\\">\\n      ( Владелец : {{task.owner.name}} )\\n    </div>\\n\\n    <div id=\\\"executor-name-bar\\\">\\n      <span *ngIf=\\\"task.executor!=undefined\\\">\\n        ( Исполнитель : {{task.executor.name}} )\\n      </span>\\n      <span *ngIf=\\\"task.executor==undefined\\\">\\n        Исполнитель не назначен\\n      </span>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"second-level\\\">\\n    <div id=\\\"status-bar\\\">\\n      <div (click)=\\\"openCloseStatusBar()\\\">\\n        <span>{{task.status}}</span>\\n        <img src=\\\"https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png\\\" width=\\\"5%\\\">\\n      </div>\\n      <div *ngIf=\\\" isStatusBarOpen\\\" id=\\\"drop-status-menu\\\"\\n           (mouseleave)=\\\"openCloseStatusBar()\\\">\\n        <ul>\\n          <li *ngFor=\\\"let status of statusList\\\"\\n              (click)=\\\"changeStatus(status)\\\">\\n            {{status}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"drop-report-menu\\\">\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n              (click)=\\\"openCloseReportBar()\\\">\\n        Создать отчет\\n      </button>\\n      <div *ngIf=\\\"showReportBar\\\" id=\\\"create-report-bar\\\">\\n        <report-bar [task]=\\\"task\\\" (createdReport)=\\\"reportCreated($event)\\\"></report-bar>\\n      </div>\\n    </div>\\n\\n\\n    <div id=\\\"add-executor-bar\\\">\\n      <select [(ngModel)]=\\\"selectedUserName\\\"\\n              (ngModelChange)=\\\"userSelected()\\\">\\n        <option selected>Выбрать Исполнителя</option>\\n        <option *ngFor=\\\" let user of userList\\\">{{user.name}}\\n      </option>\\n      </select>\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n              (click)=\\\"addTaskExecutor()\\\">\\n        Добавить\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"third-level\\\">\\n    <!--  <div id=\\\"select-end-date\\\">\\n        <span>Выбрать дату окончания</span>\\n      </div>-->\\n    <div id=\\\"add-sub-task\\\">\\n\\n      <div id=\\\"create-sub-task-bar\\\"\\n           (click)=\\\"checkAccessToCreateSubTask()\\\">\\n      <span id=\\\"just-do-it-bar\\\"\\n            *ngIf=\\\"!showSubTaskNameInput\\\">\\n        + Добавить Подзадачу\\n      </span>\\n        <md-input id=\\\"subTaskNameInput\\\"\\n                  *ngIf=\\\"showSubTaskNameInput\\\"\\n                  #subTaskName\\n                  (keydown.enter)=\\\"createTask(subTaskName.value)\\\"\\n                  (mouseleave)=\\\"showSubTaskNameInput=false\\\">\\n        </md-input>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n  <!--  <div id=\\\"fourth-level\\\">\\n      <div id=\\\"sub-task-list\\\">\\n        <ul>\\n          <li *ngFor=\\\"let task of project.taskList\\\"\\n              (click)=\\\"moveToTask(task)\\\">\\n            <span>{{task.name}}</span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>-->\\n\\n\\n  <div id=\\\"fifth-level\\\">\\n    <span id=\\\"description-span\\\">Описание:</span>\\n    <div id=\\\"task-description\\\">\\n      <div id=\\\"description\\\"\\n           *ngIf=\\\"!showTaskDescriptionTextArea\\\"\\n           (click)=\\\"checkAccessToChangeDescription()\\\">\\n        <span *ngIf=\\\"task.description==undefined ||task.description.length==0 \\\">\\n          Заполнить описание\\n        </span>\\n        <span\\n          *ngIf=\\\"task.description!=undefined\\\">\\n          {{task.description}}\\n        </span>\\n      </div>\\n\\n      <div id=\\\"descriptionTextArea\\\"\\n           *ngIf=\\\"showTaskDescriptionTextArea\\\">\\n        <textarea #descr [value]=\\\"task.description\\\"\\n                  (keydown.enter)=\\\"changeDescription(descr.value)\\\"\\n                  (mouseleave)=\\\"changeDescription(descr.value)\\\">\\n        </textarea>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"sixth-level\\\">\\n    <div id=\\\"report-bar\\\">\\n      <ul>\\n        <li *ngFor=\\\"let report of task.reportList\\\">\\n          <div id=\\\"report-bar-header\\\">\\n            <div id=\\\"author\\\"> Автор: {{report.creator.name}}</div>\\n            <div id=\\\"creation-date\\\">Создан:{{report.creationDateTime}}</div>\\n          </div>\\n          <div id=\\\"report\\\">{{report.report}}</div>\\n          <div id=\\\"spend-time\\\">Времени затрачено: {{report.workTime}}\\n            за {{report.workDate}}\\n          </div>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 1.chunk.js\n **/","import {Injectable} from \"@angular/core\";\nimport {Http, Headers,URLSearchParams} from \"@angular/http\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable()\nexport class API_Report {\n  constructor(private http:Http) {\n  }\n\n  private getJsonHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return headers\n  }\n\n  private getUrlencodedHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    return headers\n  }\n\n  private correctOffset(offset:string):string {\n    return offset.replace('+', '%2B')\n  }\n\n  public createReport(report:string, workTime:string, workDate:string,taskId:string, utcOffset:string):any {\n    let headers:Headers = this.getJsonHeader();\n\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('utcOffset', this.correctOffset(utcOffset));\n    params.set('taskId', taskId);\n\n    let transferData:any = JSON.stringify({\n      report: report,\n      workTime: workTime,\n      workDate:workDate,\n    });\n\n    return this.http.post('/api/report/createReport', transferData, {\n      headers: headers, search: params\n    }).map(res => res.json());\n  }\n\n  public getTaskAllReportList(taskId:string,utcOffset:string):any{\n    let headers:Headers = this.getJsonHeader();\n\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('utcOffset', this.correctOffset(utcOffset));\n    params.set('taskId', taskId);\n\n    return this.http.get('/api/report/getTaskAllReportList',{\n      headers: headers, search: params\n    }).map(res => res.json());\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/api/API_Report.service.ts\n **/","import {Injectable} from \"@angular/core\";\nimport {Http, Headers,URLSearchParams} from \"@angular/http\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable()\nexport class API_Task {\n  constructor(private http:Http) {\n  }\n\n  private getJsonHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return headers\n  }\n\n  private getUrlencodedHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    return headers\n  }\n\n  private correctOffset(offset:string):string {\n    return offset.replace('+', '%2B')\n  }\n\n\n  public getProjectHighTaskList(projectId:string, utcOffset:string):any {\n    let headers:Headers = this.getUrlencodedHeader();\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('projectId', projectId);\n    params.set('utcOffset', this.correctOffset(utcOffset));\n    return this.http.get('/api/task/getProjectHighTaskList', {\n      headers: headers, search: params\n    }).map(res => res.json());\n  }\n\n\n  public getCreatedTaskList(utcOffset:string):any {\n    let headers:Headers = this.getUrlencodedHeader();\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('utcOffset', this.correctOffset(utcOffset));\n    return this.http.get('/api/task/getCreatedTaskList', {\n      headers: headers, search: params\n    }).map(res => res.json());\n  }\n\n  public createTask(taskName:string, projectName:string, utcOffset:string):any {\n    let headers:Headers = this.getJsonHeader();\n\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('utcOffset', this.correctOffset(utcOffset));\n\n    let transferData:any = JSON.stringify({name: taskName, ancestorProjectId: projectName});\n\n    return this.http.post('/api/task/createTask', transferData, {\n      headers: headers, search: params\n    }).map(res => res.json());\n  }\n\n  public addTaskExecutor(taskId:string, userId:string):any {\n    let transferData:any = JSON.stringify({id: userId});\n    let headers:Headers = this.getJsonHeader();\n\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('taskId', taskId);\n\n    return this.http.put('/api/task/addTaskExecutor', transferData, {\n      headers: headers, search: params\n    }).map(res => res.json());\n\n  }\n\n  public changeName(taskId:string, name:string):any {\n    let transferData:any = JSON.stringify({id: taskId, name: name});\n    let headers:Headers = this.getJsonHeader();\n    return this.http.put('/api/task/setName', transferData, {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  public changeStatus(taskId:string, status:string):any {\n    let transferData:any = JSON.stringify({id: taskId, status: status});\n    let headers:Headers = this.getJsonHeader();\n    return this.http.put('/api/task/setStatus', transferData, {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  public changeDescription(taskId:string, description:string):any {\n    let transferData:any = JSON.stringify({id: taskId, description: description});\n    let headers:Headers = this.getJsonHeader();\n    return this.http.put('/api/task/setDescription', transferData, {\n      headers: headers\n    }).map(res => res.json());\n\n  }\n\n  public checkLowLevelAuthorities(taskId:string):any {\n    let headers:Headers = this.getUrlencodedHeader();\n    let params:URLSearchParams = new URLSearchParams();\n    params.set('id', taskId);\n    return this.http.get('/api/task/checkLowLevelAuthorities', {\n      headers: headers, search: params\n    }).map(res => res.json());\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/api/API_Task.service.ts\n **/","import {Injectable} from \"@angular/core\";\nimport {Http, Headers,URLSearchParams} from \"@angular/http\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable()\nexport class API_User {\n  constructor(private http:Http) {\n  }\n\n  private getJsonHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return headers\n  }\n\n  private getUrlencodedHeader():Headers {\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    return headers\n  }\n\n  private correctOffset(offset:string):string {\n    return offset.replace('+', '%2B')\n  }\n\n  public getUserList():any {\n    let headers:Headers = this.getUrlencodedHeader();\n    return this.http.get('/api/user/getUserList').map(res => res.json());\n  }\n}\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/api/API_User.service.ts\n **/","import {Serializable} from './serializable.class.ts'\n\nimport {TaskDTO} from './taskDTO.class'\nimport {UserDTO} from './userDTO.class'\n\nexport class ProjectDTO extends Serializable{\n  id:string;\n  name:string;\n  description:string;\n  creationDateTime:string;\n  status:string;\n  taskList:TaskDTO[]=[];\n  owner:UserDTO;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/entitiesDTO/projectDTO.class.ts\n **/","import {Serializable} from './serializable.class.ts'\nimport {UserDTO} from './userDTO.class'\n\nexport class ReportDTO extends Serializable{\n  id:string;\n  report:string;\n  workTime:string;\n  workDate:string;\n  creationDateTime:string;\n  creator:UserDTO;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/entitiesDTO/reportDTO.class.ts\n **/","export class Serializable {\n  public fillFromJSON(json: string):void {\n    var jsonObj = JSON.parse(json);\n    for (var propName in jsonObj)\n      this[propName] = jsonObj[propName]\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/entitiesDTO/serializable.class.ts\n **/","import {Serializable} from './serializable.class.ts'\nimport {UserDTO} from './userDTO.class'\nimport {ReportDTO} from './reportDTO.class'\n\nexport class TaskDTO extends Serializable{\n  id:string;\n  name:string;\n  description:string;\n  creationDateTime:string;\n  plannedEndDateTime:string;\n  actualEndDateTime:string;\n  status:string;\n  owner:UserDTO;\n  executor:UserDTO;\n  reportList:ReportDTO[]=[];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/entitiesDTO/taskDTO.class.ts\n **/","import {Serializable} from './serializable.class.ts'\n\nexport class UserDTO extends Serializable {\n  id:string;\n  name:string;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/globalServices/entitiesDTO/userDTO.class.ts\n **/","import {Component,Input,Output,EventEmitter,ViewEncapsulation} from '@angular/core';\n\nimport {ProjectDTO} from '../../../globalServices/entitiesDTO/projectDTO.class';\nimport {TaskDTO} from '../../../globalServices/entitiesDTO/taskDTO.class';\nimport {API_Project} from '../../../globalServices/api/API_Project.service';\nimport {API_Task} from '../../../globalServices/api/API_Task.service';\nimport {DateFormatter} from '../../../globalServices/dateFromatter/dateFormatter.service';\n\n\n@Component({\n  selector: 'project-management',\n  providers: [API_Project, API_Task],\n  directives: [],\n  pipes: [],\n  encapsulation: ViewEncapsulation.Native,\n  styles: [require('./projectManagement.css')],\n  template: require('./projectManagement.html')\n})\nexport class ProjectManagement {\n\n  @Input() project:ProjectDTO;\n  @Output() taskSelected = new EventEmitter();\n\n\n  private statusBarValue;\n  private isStatusBarOpen:boolean = false;\n  private statusList:string[] = ['Active', 'Frozen', 'Complete'];\n  private accessToChangeProject:boolean = false;\n  private showProjectNameInput:boolean = false;\n  private showProjectDescriptionTextArea:boolean = false;\n  private showTaskNameInput:boolean = false;\n\n  constructor(private api_Project:API_Project,\n              private api_Task:API_Task,\n              private dateFormatter:DateFormatter) {\n  }\n\n  ngOnInit() {\n  }\n\n  public openCloseStatusBar(status:string):void {\n    this.statusBarValue = status;\n    this.isStatusBarOpen = this.isStatusBarOpen == false;\n  }\n\n  public changeStatus(status:string):void {\n    if(this.project.status!=status){\n      this.api_Project.changeStatus(this.project.id, status).subscribe(\n        data => {\n          this.project.status = status;\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    this.isStatusBarOpen = this.isStatusBarOpen == false;\n  }\n\n\n  public checkAccessToCreateTask():void {\n\n    if (this.accessToChangeProject) {\n      this.showTaskNameInput = true;\n    }\n    else {\n      this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(\n        data=> {\n          console.log(data);\n          this.showTaskNameInput = true;\n          this.accessToChangeProject = true;\n        },\n        error=> {\n          console.log(error);\n          this.showTaskNameInput = false;\n\n        }\n      );\n    }\n  }\n\n  public createTask(taskName:string):void {\n    console.log(taskName);\n    this.api_Task.createTask(taskName, this.project.id, this.dateFormatter.getUtcOffset()).subscribe(\n      data=> {\n        let newTask:TaskDTO=new TaskDTO();\n        newTask.fillFromJSON(JSON.stringify(data.responseObjects.task));\n\n        newTask.creationDateTime = this.dateFormatter\n          .changeDateTimeToRuWithPattern(newTask.creationDateTime, \"Do MMMM YYYY\");\n        this.project.taskList.push(newTask);\n\n        console.log(this.project);\n        console.log(data);\n      },\n      error=> {\n        console.log(error);\n\n      }\n    );\n  }\n\n  public checkAccessToChangeName():void {\n\n    if (this.accessToChangeProject)\n      this.showProjectNameInput = true;\n\n    else {\n      this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(\n        data=> {\n          console.log(data);\n          this.showProjectNameInput = true;\n          this.accessToChangeProject = true;\n\n        },\n        error=> {\n          console.log(error);\n          this.showProjectNameInput = false;\n\n        }\n      );\n    }\n  }\n\n\n  public changeName(name:string):void {\n    var formattedName = name.trim();\n\n    if (formattedName.length != 0 &&\n      formattedName != this.project.name) {\n      this.api_Project.changeName(this.project.id, name).subscribe(\n        data => {\n          this.project.name = name;\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n    this.showProjectNameInput = false;\n  }\n\n  public checkAccessToChangeDescription():void {\n\n    if (this.accessToChangeProject)\n      this.showProjectDescriptionTextArea = true;\n\n    else {\n      this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(\n        data=> {\n          this.showProjectDescriptionTextArea = true;\n          this.accessToChangeProject = true;\n\n        },\n        error=> {\n          console.log(error);\n          this.showProjectDescriptionTextArea = false;\n\n        }\n      );\n    }\n  }\n\n  public changeDescription(description:string):void {\n    var formattedDescription = description.trim();\n\n    if (formattedDescription.length != 0 &&\n      formattedDescription != this.project.description) {\n      this.api_Project.changeDescription(this.project.id, description).subscribe(\n        data => {\n          this.project.description = description;\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n    this.showProjectDescriptionTextArea = false;\n  }\n\n  moveToTask(task:TaskDTO){\n    this.taskSelected.emit({\n      task:task\n    })\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/timeTracker/projects/projectManagement/projectManagement.component.ts\n **/","module.exports = \"#management-content {\\n  margin-left: 15px;\\n  width: 100%;\\n  background-color: white;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n}\\n\\n#first-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n  padding: 15px 100px 15px 20px;\\n}\\n\\n#first-level #project-name {\\n  display: inline-block;\\n  font-weight: 300;\\n  font-size: 25px;\\n  color: rgba(26, 177, 136, 1);\\n\\n}\\n\\n#first-level #projectNameInput {\\n  display: inline-block;\\n  font-weight: 100;\\n  font-size: 22px;\\n  width: 100%;\\n}\\n\\n#first-level #creation-date-bar {\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n}\\n\\n#first-level #owner-name-bar {\\n  margin-left: 20px;\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#second-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#second-level #status-bar {\\n  display: inline-block;\\n  padding: 10px 50px 10px 0;\\n  border-left: 6px solid rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#second-level #status-bar span {\\n  padding-left: 10px;\\n  font-weight: 700;\\n}\\n\\n#second-level #drop-status-menu {\\n  z-index: 2;\\n\\n  position: absolute;\\n  width: 100px;\\n  height: 150px;\\n  background-color: white;\\n  border: 1px solid #eaebec;\\n}\\n\\n#second-level #drop-status-menu ul {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\n#second-level #drop-status-menu ul li {\\n  font-weight: 300;\\n  padding: 10px 0 10px 5px;\\n}\\n\\n#second-level #drop-status-menu ul li:hover {\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #add-executor-bar {\\n  display: inline-block;\\n}\\n\\n#second-level #add-executor-bar select {\\n  padding: 5px 20px;\\n  font-size: 15px;\\n  font-weight: 300;\\n  cursor: pointer;\\n}\\n\\n#third-level {\\n  z-index: 1;\\n  display: block;\\n  color: black;\\n  font-weight: 300;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#third-level #select-end-date {\\n  display: inline-block;\\n}\\n\\n#third-level #timer {\\n  display: inline-block;\\n}\\n\\n#third-level #create-task-bar {\\n  padding: 10px 0;\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#third-level #create-task-bar #just-do-it-bar {\\n  font-size: 20px;\\n  cursor: pointer;\\n\\n}\\n\\n#third-level #create-task-bar #taskNameInput {\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n#fourth-level {\\n}\\n\\n#fourth-level #task-list ul {\\n  padding: 0;\\n  margin: 0;\\n  width: auto;\\n  list-style: none;\\n  border-right: 5px solid rgba(26, 177, 136, 1);\\n  border-left: 5px solid rgba(26, 177, 136, 1);\\n}\\n\\n#fourth-level #task-list ul li {\\n  padding: 6px 0;\\n  font-size: 15px;\\n  font-weight: 300;\\n  color: #828282;\\n  background-color: #FAFAFA;\\n  border-top: 1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#fourth-level #task-list ul li:hover {\\n\\n  background-color: rgba(26, 177, 136, 0.8);\\n  color: white;\\n\\n  -moz-transition: all 0.5s ease-out 0s;\\n  -webkit-transition: all 0.5s ease-out 0s;\\n  transition: all 0.5s ease-out 0s;\\n}\\n\\n#fourth-level #task-list ul li span {\\n  margin-left: 15px;\\n}\\n\\n#fifth-level {\\n  border-top: 1px solid #eaebec;\\n\\n}\\n#fifth-level #description-span {\\n  display: block;\\n  padding: 10px 0 5px 20px;\\n  font-size: 20px;\\n  font-weight: 200;\\n}\\n#fifth-level #description {\\n  padding: 5px 20px 20px 20px;\\n  min-width: 200px;\\n  min-height: 200px;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#fifth-level textarea {\\n  padding: 5px 20px 20px 20px;\\n  font-size: 17px;\\n  min-width: 460px;\\n  min-height: 250px;\\n}\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/projectManagement/projectManagement.css\n ** module id = 768\n ** module chunks = 1\n **/","module.exports = \"<div id=\\\"management-content\\\">\\n  <div id=\\\"first-level\\\">\\n    <div id=\\\"name-bar\\\"\\n         (click)=\\\"checkAccessToChangeName()\\\">\\n      <span id=\\\"project-name\\\"\\n            *ngIf=\\\"!showProjectNameInput\\\">\\n        {{project.name}}\\n      </span>\\n      <md-input id=\\\"projectNameInput\\\"\\n                *ngIf=\\\"showProjectNameInput\\\"\\n                #name [value]=\\\"project.name\\\"\\n                (keydown.enter)=\\\"changeName(name.value)\\\"\\n                (mouseleave)=\\\"changeName(name.value)\\\">\\n      </md-input>\\n    </div>\\n\\n    <div id=\\\"creation-date-bar\\\">\\n      Создан: {{project.creationDateTime}}\\n    </div>\\n\\n    <div id=\\\"owner-name-bar\\\">\\n      ( Владелец : {{project.owner.name}} )\\n    </div>\\n  </div>\\n\\n  <div id=\\\"second-level\\\">\\n    <div id=\\\"status-bar\\\">\\n      <div (click)=\\\"openCloseStatusBar()\\\">\\n        <span>{{project.status}}</span>\\n        <img src=\\\"https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png\\\" width=\\\"5%\\\">\\n      </div>\\n      <div *ngIf=\\\" isStatusBarOpen\\\" id=\\\"drop-status-menu\\\"\\n           (mouseleave)=\\\"openCloseStatusBar()\\\">\\n        <ul>\\n          <li *ngFor=\\\"let status of statusList\\\"\\n              (click)=\\\"changeStatus(status)\\\">\\n            {{status}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"add-executor-bar\\\">\\n      <select>\\n        <option selected> Добавить пользователя</option>\\n        <option>Миша</option>\\n        <option>Вася</option>\\n      </select>\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"third-level\\\">\\n    <!--  <div id=\\\"select-end-date\\\">\\n        <span>Выбрать дату окончания</span>\\n      </div>-->\\n    <div id=\\\"add-task\\\">\\n\\n      <div id=\\\"create-task-bar\\\"\\n           (click)=\\\"checkAccessToCreateTask()\\\">\\n      <span id=\\\"just-do-it-bar\\\"\\n            *ngIf=\\\"!showTaskNameInput\\\">\\n        + Добавить задачу\\n      </span>\\n        <md-input id=\\\"taskNameInput\\\"\\n                  *ngIf=\\\"showTaskNameInput\\\"\\n                  #taskName\\n                  (keydown.enter)=\\\"createTask(taskName.value)\\\"\\n                  (mouseleave)=\\\"showTaskNameInput=false\\\">\\n        </md-input>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"fourth-level\\\">\\n    <div id=\\\"task-list\\\">\\n      <ul>\\n        <li *ngFor=\\\"let task of project.taskList\\\"\\n        (click)=\\\"moveToTask(task)\\\">\\n          <span>{{task.name}}</span>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n\\n\\n  <div id=\\\"fifth-level\\\">\\n    <span id=\\\"description-span\\\">Описание:</span>\\n    <div id=\\\"project-description\\\">\\n      <div id=\\\"description\\\"\\n           *ngIf=\\\"!showProjectDescriptionTextArea\\\"\\n           (click)=\\\"checkAccessToChangeDescription()\\\">\\n        <span *ngIf=\\\"project.description==undefined ||project.description.length==0 \\\">\\n          Заполнить описание\\n        </span>\\n        <span\\n          *ngIf=\\\"project.description!=undefined\\\">\\n          {{project.description}}\\n        </span>\\n      </div>\\n\\n      <div id=\\\"descriptionTextArea\\\"\\n           *ngIf=\\\"showProjectDescriptionTextArea\\\">\\n        <textarea #descr [value]=\\\"project.description\\\"\\n                  (keydown.enter)=\\\"changeDescription(descr.value)\\\"\\n                  (mouseleave)=\\\"changeDescription(descr.value)\\\">\\n        </textarea>\\n        <!--<button md-raised-button class=\\\"md-raised md-primary\\\"-->\\n        <!--(click)=\\\"changeDescription(descr.value)\\\">Изменить-->\\n        <!--</button>-->\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/projectManagement/projectManagement.html\n ** module id = 769\n ** module chunks = 1\n **/","import {Component,ViewEncapsulation} from '@angular/core';\n\nimport {ProjectManagement} from './projectManagement/projectManagement.component';\nimport {TaskManagement} from './taskManagement/taskManagement.component';\nimport {ProjectDTO} from '../../globalServices/entitiesDTO/projectDTO.class';\nimport {TaskDTO} from '../../globalServices/entitiesDTO/taskDTO.class';\nimport {API_Project} from '../../globalServices/api/API_Project.service';\nimport {API_Task} from '../../globalServices/api/API_Task.service';\nimport {DateFormatter} from '../../globalServices/dateFromatter/dateFormatter.service';\n\n/*import {Calendar} from '../globalServices/datePicker/calendar.component'*/\n\n\n@Component({\n  selector: 'projects',\n  providers: [API_Project, API_Task],\n  directives: [ProjectManagement,TaskManagement],\n  pipes: [],\n  encapsulation: ViewEncapsulation.Native,\n  styles: [require('./projects.css')],\n  template: require('./projects.html')\n})\nexport class Projects {\n\n  private targetProject:ProjectDTO = new ProjectDTO();\n  private targetTask:TaskDTO;\n  private projectList:ProjectDTO[] = [];\n  private projectName:string;\n  private openProjectBar:boolean = false;\n  private openTaskBar:boolean = false;\n  private openProjectTaskList:boolean=false;\n  private openCreateProject:boolean = false;\n\n\n  ngOnInit() {\n    this.getUserActiveProjectList();\n\n  }\n\n  constructor(private api_Project:API_Project,\n              private api_Task:API_Task,\n              private dateFormatter:DateFormatter) {\n  }\n\n  /** Возвращает активные проекты пользователя*/\n  getUserActiveProjectList():void {\n    this.api_Project.getUserActiveProjectList(this.dateFormatter.getUtcOffset()).subscribe(\n      data => {\n        if (data.responseObjects.projectList.length != 0)\n          this.projectList = this.transferProjectListToDTO(data.responseObjects.projectList);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  /** Возвращает задачи пользователя(Т.к есть разделения на подзадачи)*/\n  public getProjectHighTaskList():void {\n    this.api_Task.getProjectHighTaskList(this.targetProject.id, this.dateFormatter.getUtcOffset()).subscribe(\n      data => {\n        this.pushTransferTaskListToProject(data.responseObjects.taskList);\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n\n  createProject() {\n    this.api_Project.createProject(this.projectName, this.dateFormatter.getUtcOffset()).subscribe(\n      data => {\n        this.targetProject.fillFromJSON(JSON.stringify(data.responseObjects.project));\n        this.targetProject.creationDateTime = this.dateFormatter\n          .changeDateTimeToRuWithPattern(this.targetProject.creationDateTime, \"Do MMMM YYYY\");\n        this.projectList.push(this.targetProject);\n        this.openProjectBar = true;\n        this.openCreateProjectSwitch();\n      },\n      error => {\n        console.log(error);\n        console.log(error._body);\n      }\n    );\n  }\n\n\n  /** Трансформирует входящий массив проектов в DTO объект, с изменением формата времени*/\n  transferProjectListToDTO(data:any[]):ProjectDTO[] {\n    let projectDTOArray:ProjectDTO[] = [];\n    for (let i = 0; i < data.length; i++) {\n      let newProjectDTO = new ProjectDTO();\n      newProjectDTO.fillFromJSON(JSON.stringify(data[i]));\n      newProjectDTO.creationDateTime = this.dateFormatter\n        .changeDateTimeToRuWithPattern(newProjectDTO.creationDateTime, \"Do MMMM YYYY\");\n      projectDTOArray.push(newProjectDTO);\n    }\n    return projectDTOArray;\n  }\n\n  /** Трансформирует входящий массив задач в DTO объект, с изменением формата времени*/\n  pushTransferTaskListToProject(data:any[]):void {\n    for (let i = 0; i < data.length; i++) {\n      let newTaskDTO = new TaskDTO();\n      newTaskDTO.fillFromJSON(JSON.stringify(data[i]));\n      newTaskDTO.creationDateTime = this.dateFormatter\n        .changeDateTimeToRuWithPattern(newTaskDTO.creationDateTime, \"Do MMMM YYYY\");\n      this.targetProject.taskList.push(newTaskDTO);\n    }\n  }\n\n\n  public projectOpenCloseSwitch(project:ProjectDTO):void {\n    this.openProjectBar = true;\n    this.openTaskBar=false;\n    this.openProjectTaskList=false;\n    this.targetProject = project;\n\n    if (this.targetProject.taskList.length == 0)\n      this.getProjectHighTaskList();\n  }\n\n  public openCreateProjectSwitch():void {\n    this.openCreateProject = this.openCreateProject == false;\n  }\n\n  public changeProjectToTaskBar(event):void {\n    this.openProjectTaskList=true;\n    this.openProjectBar=false;\n    this.openTaskBar=true;\n    this.targetTask=event.task;\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/timeTracker/projects/projects.component.ts\n **/","module.exports = \"#projects-content {\\n  float: left;\\n  margin: 20px;\\n  height: 100%;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n\\n}\\n\\n#projects-list-bar {\\n  float: left;\\n  display: inline-block;\\n  width: 400px;\\n  height: 100%;\\n  background-color: white;\\n}\\n\\n#projects-menu ul {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n#projects-menu ul li {\\n  list-style: none;\\n  display: inline-block;\\n  padding: 5px 10px;\\n  margin-right: 10px;\\n  font-size: 13px;\\n  color: #6b99c7;\\n  cursor: pointer;\\n}\\n\\n#projects-menu ul li:hover {\\n  background-color: #f5f8fc;\\n}\\n\\n#project-list {\\n  display: block;\\n}\\n\\n#project-list #create-project-button  {\\n  padding: 10px;\\n  margin: 0 0;\\n  cursor: pointer;\\n}\\n\\n#project-list #create-project-button #plus-part {\\n  display: inline-block;\\n  color: #6b99c7;\\n  font-size: 25px;\\n  font-weight: bold;\\n}\\n\\n#project-list #create-project-button #create-part {\\n  display: inline-block;\\n  color: #6b99c7;\\n  font-size: 15px;\\n}\\n\\n#create-project-button div:hover {\\n  background-color: #f5f8fc;\\n}\\n\\n#project-list #create-project-button form {\\n  padding: 10px;\\n  margin: 0 0;\\n}\\n\\n#project-list #create-project-button input {\\n  padding: 5px 25px;\\n}\\n#project-list #create-project-button button {\\n  background-color: rgba(26, 177, 136, 1);\\n }\\n\\n#project-list ul {\\n  padding: 0;\\n  margin: 0;\\n  display: block;\\n  list-style: none;\\n}\\n\\n#project-list li {\\n  padding: 10px 0;\\n  border-top:   1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#project-list li:hover {\\n background-color: aliceblue;\\n}\\n\\n\\n#project-list li span {\\n  padding-left: 40px;\\n  color: #515151;\\n  font-weight: 400;\\n}\\n\\n\\n#project-list #task-list li {\\n  padding: 5px 0;\\n  border-top:  1px solid #eaebec;\\n  font-size: 15px;\\n  background-color: #929292;\\n}\\n\\n#project-list #task-list li span {\\n  padding-left: 60px;\\n  color: #515151;\\n  font-weight: 300;\\n}\\n\\n#project-list #task-list li:hover {\\n  background-color: aliceblue;\\n}\\n\\n\\n#project-task-management {\\n  display: inline-block;\\n  float: left;\\n}\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/projects.css\n ** module id = 770\n ** module chunks = 1\n **/","module.exports = \"<div id=\\\"projects-content\\\">\\n\\n  <div id=\\\"projects-list-bar\\\">\\n\\n    <div id=\\\"projects-menu\\\">\\n      <ul>\\n        <li>Активные</li>\\n        <li>Законченные</li>\\n        <li>Поиск проектов</li>\\n      </ul>\\n    </div>\\n\\n\\n    <div id=\\\"project-list\\\">\\n      <div id=\\\"create-project-button\\\">\\n        <div *ngIf=\\\"!openCreateProject\\\" (click)=\\\"openCreateProjectSwitch()\\\">\\n          <span id=\\\"plus-part\\\">+</span>\\n          <span id=\\\"create-part\\\">Создать проект</span>\\n        </div>\\n        <form *ngIf=\\\"openCreateProject\\\" (blur)=\\\"openCreateProjectSwitch()\\\">\\n          <input md-input [(ngModel)]=\\\"projectName\\\"\\n                 placeholder=\\\"Введите название проекта\\\" type=\\\"text\\\">\\n          <button md-raised-button class=\\\"md-raised md-primary\\\"\\n                  (click)=\\\"createProject()\\\">Подтвердить\\n          </button>\\n        </form>\\n      </div>\\n      <ul>\\n        <li *ngIf=\\\"projectList.length==0\\\">\\n          <span>У вас нет ни одного проекта</span>\\n        </li>\\n        <li *ngFor=\\\"let project of projectList\\\"\\n            (click)=\\\"projectOpenCloseSwitch(project)\\\">\\n          <span id=\\\"project-name\\\">{{project.name}}</span>\\n\\n          <div id=\\\"task-list\\\" *ngIf=\\\"openProjectTaskList\\\">\\n            <ul *ngIf=\\\"targetProject.name==project.name &&\\n             targetTask!=undefined\\\">\\n              <li *ngFor=\\\"let task of project.taskList\\\">\\n               <span>{{task.name}}</span>\\n              </li>\\n            </ul>\\n          </div>\\n        </li>\\n      </ul>\\n      <!-- <div id=\\\"create-task-button\\\">\\n      <div><span>+</span> Создать задачу</div>\\n    </div>-->\\n    </div>\\n  </div>\\n  <div id=\\\"project-task-management\\\">\\n    <project-management *ngIf=\\\"openProjectBar\\\"\\n                        [project]=\\\"targetProject\\\"\\n                        (taskSelected)=\\\"changeProjectToTaskBar($event)\\\">\\n\\n    </project-management>\\n\\n    <task-management *ngIf=\\\"openTaskBar\\\"\\n                     [task]=\\\"targetTask\\\">\\n\\n    </task-management>\\n  </div>\\n\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/projects.html\n ** module id = 771\n ** module chunks = 1\n **/","import {Component,Input,Output,EventEmitter} from '@angular/core';\n\nimport {TaskDTO} from '../../../globalServices/entitiesDTO/taskDTO.class';\nimport {API_Report} from '../../../globalServices/api/API_Report.service';\nimport {DateFormatter} from '../../../globalServices/dateFromatter/dateFormatter.service';\n\n\n@Component({\n  selector: 'report-bar',\n  providers: [API_Report],\n  directives: [],\n  pipes: [],\n  styles: [require('./reportBar.css')],\n  template: require('./reportBar.html')\n})\nexport class ReportBar {\n\n  @Input() task:TaskDTO;\n  @Output() createdReport = new EventEmitter();\n\n  private inputHours:string = '';\n  private inputMinutes:string = '';\n  private inputReport:string = '';\n  private inputDate:string;\n  private reportDate:string;\n  private errorMessage:string = '';\n\n\n  public constructor(private api_Report:API_Report,\n                     private dateFormatter:DateFormatter) {\n  }\n\n  public ngOnInit():void {\n    this.inputDate = this.dateFormatter.getCurrentDate();\n    this.reportDate = this.dateFormatter.getCurrentMonth();\n  }\n\n  public createReport() {\n\n    if (this.validateData()) {\n      this.inputHours = this.inputHours.length == 1 ? '0' + this.inputHours : this.inputHours;\n      this.inputMinutes = this.inputMinutes.length == 1 ? '0' + this.inputMinutes : this.inputMinutes;\n\n      let workTime = this.inputHours + ':' + this.inputMinutes;\n\n      this.api_Report.createReport(this.inputReport, workTime, this.inputDate,\n        this.task.id, this.dateFormatter.getUtcOffset()).subscribe(\n        data => {\n          this.createdReport.emit({\n            report: data.responseObjects.report\n          })\n        },\n        error => {\n          console.log(error)\n        }\n      );\n    }\n  }\n\n  public validateData():boolean {\n    if (this.inputHours.length == 0 || this.inputMinutes.length == 0) {\n      this.errorMessage = 'Заполните время работы';\n      return false;\n    }\n\n    let hours:number = +this.inputHours;\n    let inputMinutes:number = +this.inputMinutes;\n\n    if (hours > 24) {\n      this.errorMessage = 'Часов не может быть больше 24';\n      return false;\n    }\n\n    if (inputMinutes > 60) {\n      this.errorMessage = 'Минут не может быть больше 60';\n      return false;\n    }\n\n    if (this.inputReport.trim().length == 0) {\n      this.errorMessage = 'Необходимо заполнить отчет';\n      return false;\n    }\n\n    return true;\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/timeTracker/projects/reportBar/reportBar.component.ts\n **/","module.exports = \"#report-bar-container {\\n  background-color: white;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\\n}\\n\\n#report-bar-container #report-bar-indent {\\n  padding: 15px;\\n}\\n\\n#report-bar-container #report-bar-timer {\\n  display: inline-block;\\n  font: 24px/32px 'Tahoma', sans-serif;\\n}\\n\\n#report-bar-container #report-bar-timer input {\\n  width: 25px;\\n  height: 40px;\\n  border: 1px solid #d9d9d9;\\n  font: 24px/32px 'Tahoma', sans-serif;\\n  text-align: right;\\n  padding: 0 3px;\\n  vertical-align: middle;\\n}\\n\\n#report-bar-container #report-bar-calendar {\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#report-bar-container #report-bar-textarea {\\n  margin-top: 10px;\\n  display: block;\\n}\\n\\n#report-bar-container #report-bar-textarea textarea {\\n  width: 300px;\\n  height: 140px;\\n  font-size: 21px;\\n  font-weight: 100;\\n}\\n\\n#report-bar-container #errorMessage {\\n  display: block;\\n  font-size: 13px;\\n  color: darkred;\\n}\\n\\n#report-bar-container #mega-calendar {\\n  color: rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#report-bar-container #mega-calendar:hover {\\n  color: rgba(26, 177, 136, 0.8);\\n}\\n\\n#report-bar-container #report-bar-send-report button {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/reportBar/reportBar.css\n ** module id = 772\n ** module chunks = 1\n **/","module.exports = \"\\n<div id=\\\"report-bar-container\\\">\\n\\n  <div id=\\\"report-bar-indent\\\">\\n    <div id=\\\"report-bar-header\\\">\\n      <span>Часы</span>\\n      <span>Минуты</span>\\n      <div id=\\\"report-bar-timer\\\">\\n        <input id=\\\"hours\\\" [(ngModel)]=\\\"inputHours\\\" maxlength=\\\"2\\\"\\n               onkeyup=\\\"this.value = this.value.replace (/[^0-9]/, '')\\\">\\n        <span id=\\\"report-bar-timer-colon\\\">:</span>\\n        <input id=\\\"minutes\\\" [(ngModel)]=\\\"inputMinutes\\\" maxlength=\\\"2\\\"\\n               onkeyup=\\\"this.value = this.value.replace (/[^0-9]/, '')\\\">\\n      </div>\\n\\n        <div id=\\\"mega-calendar\\\">\\n            <span>За {{reportDate}}</span>\\n        </div>\\n\\n    </div>\\n\\n    <div id=\\\"report-bar-textarea\\\">\\n    <textarea [(ngModel)]=\\\"inputReport\\\">\\n\\n    </textarea>\\n      <span id=\\\"errorMessage\\\" *ngIf=\\\"errorMessage.length!=0\\\">\\n        {{errorMessage}}\\n      </span>\\n    </div>\\n\\n    <div id=\\\"report-bar-send-report\\\">\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n      (click)=\\\"createReport()\\\">Добавить отчет\\n      </button>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/reportBar/reportBar.html\n ** module id = 773\n ** module chunks = 1\n **/","import {Component,Input} from '@angular/core';\n\nimport {TaskDTO} from '../../../globalServices/entitiesDTO/taskDTO.class';\nimport {ReportDTO} from '../../../globalServices/entitiesDTO/reportDTO.class';\nimport {UserDTO} from '../../../globalServices/entitiesDTO/userDTO.class';\nimport {ReportBar} from '../reportBar/reportBar.component'\nimport {API_Task} from '../../../globalServices/api/API_Task.service';\nimport {API_Report} from '../../../globalServices/api/API_Report.service';\nimport {API_User} from '../../../globalServices/api/API_User.service';\nimport {DateFormatter} from '../../../globalServices/dateFromatter/dateFormatter.service';\n\n\n@Component({\n  selector: 'task-management',\n  providers: [API_Task, API_Report, API_User],\n  directives: [ReportBar],\n  pipes: [],\n  styles: [require('./taskManagement.css')],\n  template: require('./taskManagement.html')\n})\nexport class TaskManagement {\n\n  @Input() task:TaskDTO;\n  private userList:UserDTO[] = [];\n\n  private selectedUserName:string;\n  private selectedUser:UserDTO;\n\n  private statusBarValue;\n  private isStatusBarOpen:boolean = false;\n  private showTaskNameInput:boolean = false;\n  private showSubTaskNameInput:boolean = false;\n  private showTaskDescriptionTextArea:boolean = false;\n  private showReportBar:boolean = false;\n  private accessToChangeTask:boolean = false;\n\n  private statusList:string[] = ['Active', 'Frozen', 'New', 'Complete'];\n\n\n  constructor(private api_Task:API_Task,\n              private api_Report:API_Report,\n              private api_User:API_User,\n              private dateFormatter:DateFormatter) {\n  }\n\n  ngOnInit() {\n    this.getTaskAllReportList();\n    this.getUserList();\n  }\n\n\n  public changeName(name:string):void {\n    var formattedName = name.trim();\n\n    if (formattedName.length != 0 &&\n      formattedName != this.task.name) {\n      this.api_Task.changeName(this.task.id, name).subscribe(\n        data => {\n          this.task.name = name;\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n    this.showTaskNameInput = false;\n  }\n\n\n  public checkAccessToChangeName():void {\n\n    if (this.accessToChangeTask)\n      this.showTaskNameInput = true;\n\n    else {\n      this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(\n        data=> {\n          console.log(data);\n          this.showTaskNameInput = true;\n          this.accessToChangeTask = true;\n\n        },\n        error=> {\n          console.log(error);\n          this.showTaskNameInput = false;\n\n        }\n      );\n    }\n  }\n\n  public changeStatus(status:string):void {\n    if (this.task.status != status) {\n      this.api_Task.changeStatus(this.task.id, status).subscribe(\n        data => {\n          this.task.status = status;\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n    this.isStatusBarOpen = this.isStatusBarOpen == false;\n  }\n\n  public checkAccessToCreateSubTask():void {\n\n    if (this.accessToChangeTask) {\n      this.showSubTaskNameInput = true;\n    }\n    else {\n      this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(\n        data=> {\n          console.log(data);\n          this.showSubTaskNameInput = true;\n          this.accessToChangeTask = true;\n        },\n        error=> {\n          console.log(error);\n          this.showSubTaskNameInput = false;\n\n        }\n      );\n    }\n  }\n\n  public changeDescription(description:string):void {\n    var formattedDescription = description.trim();\n\n    if (formattedDescription.length != 0 &&\n      formattedDescription != this.task.description) {\n      this.api_Task.changeDescription(this.task.id, description).subscribe(\n        data => {\n          this.task.description = description;\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n    this.showTaskDescriptionTextArea = false;\n  }\n\n  public checkAccessToChangeDescription():void {\n\n    if (this.accessToChangeTask)\n      this.showTaskDescriptionTextArea = true;\n\n    else {\n      this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(\n        data=> {\n          this.showTaskDescriptionTextArea = true;\n          this.accessToChangeTask = true;\n\n        },\n        error=> {\n          console.log(error);\n          this.showTaskDescriptionTextArea = false;\n\n        }\n      );\n    }\n  }\n\n\n  public openCloseStatusBar(status:string):void {\n    this.statusBarValue = status;\n    this.isStatusBarOpen = this.isStatusBarOpen == false;\n  }\n\n  public openCloseReportBar():void {\n\n    if (this.accessToChangeTask) {\n      this.showReportBar = this.showReportBar == false;\n    }\n\n    else {\n      this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(\n        data=> {\n          this.showReportBar = true;\n          this.accessToChangeTask = true;\n        },\n        error=> {\n          console.log(error);\n          this.showReportBar = false;\n        }\n      );\n    }\n  }\n\n  getTaskAllReportList() {\n    this.api_Report.getTaskAllReportList(this.task.id, this.dateFormatter.getUtcOffset()).subscribe(\n      data=> {\n        console.log(data);\n        this.pushTransferReportListToProject(data.responseObjects.reportList);\n      },\n      error=> {\n        console.log(error);\n      }\n    );\n  }\n\n  public reportCreated(event) {\n    this.showReportBar = false;\n    console.log(event);\n  }\n\n\n  /** Трансформирует входящий массив отчетов в DTO объект, с изменением формата времени*/\n  pushTransferReportListToProject(data:any[]):void {\n    for (let i = 0; i < data.length; i++) {\n      let newReportDTO = new ReportDTO();\n      newReportDTO.fillFromJSON(JSON.stringify(data[i]));\n      newReportDTO.workTime = this.dateFormatter.transformTime(newReportDTO.workTime);\n      newReportDTO.creationDateTime = this.dateFormatter\n        .changeDateTimeToRuWithPattern(newReportDTO.creationDateTime, \"Do MMMM YYYY\");\n      this.task.reportList.push(newReportDTO);\n    }\n  }\n\n  public getUserList():void {\n    if (this.userList.length == 0) {\n      this.api_User.getUserList().subscribe(\n        data=> {\n          this.pushTransferUserListToListDTO(data.responseObjects.userList);\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  public addTaskExecutor():void {\n    if (this.selectedUser != undefined) {\n      this.api_Task.addTaskExecutor(this.task.id, this.selectedUser.id).subscribe(\n        data=> {\n          console.log(data);\n          let newExecutor=new UserDTO();\n          newExecutor.fillFromJSON(JSON.stringify(data.responseObjects.executor))\n          this.task.executor=newExecutor;\n\n        },\n        error=> {\n          console.log(error);\n        }\n      );\n    }\n    else\n      console.log('Необходимо выбрать исполнителя перед отправкой');\n  }\n\n  userSelected():void {\n    this.selectedUser = this.userList.find(user => user.name === this.selectedUserName);\n  }\n\n  pushTransferUserListToListDTO(data:any[]):void {\n    for (let i = 0; i < data.length; i++) {\n      let newUserDTO = new UserDTO();\n      newUserDTO.fillFromJSON(JSON.stringify(data[i]));\n      this.userList.push(newUserDTO);\n    }\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/timeTracker/projects/taskManagement/taskManagement.component.ts\n **/","module.exports = \"#management-content {\\n  margin-left: 15px;\\n  width: 100%;\\n  background-color: white;\\n  font-family: \\\"Open sans\\\", \\\"lucida grande\\\", \\\"Segoe UI\\\", arial, verdana, \\\"lucida sans unicode\\\", tahoma, sans-serif;\\n}\\n\\n#first-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n  padding: 15px 100px 15px 20px;\\n}\\n\\n#first-level #task-name {\\n  display: inline-block;\\n  font-weight: 300;\\n  font-size: 25px;\\n  color: rgba(26, 177, 136, 1);;\\n\\n}\\n\\n#first-level #taskNameInput {\\n  display: inline-block;\\n  font-weight: 100;\\n  font-size: 22px;\\n  width: 100%;\\n}\\n\\n#first-level #creation-date-bar {\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n}\\n\\n#first-level #owner-name-bar {\\n  margin-left: 20px;\\n  display: inline-block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#first-level #executor-name-bar {\\n  margin-left: 20px;\\n  display: block;\\n  color: rgba(19, 35, 47, 0.9);\\n  font-weight: 800;\\n}\\n\\n#second-level {\\n  display: block;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#second-level #status-bar {\\n  display: inline-block;\\n  padding: 10px 10px 10px 0;\\n  border-left: 6px solid rgba(26, 177, 136, 1);\\n  cursor: pointer;\\n}\\n\\n#second-level #status-bar span {\\n  padding-left: 10px;\\n  font-weight: 700;\\n}\\n\\n#second-level #drop-status-menu {\\n  z-index: 2;\\n\\n  position: absolute;\\n  width: 100px;\\n  height: 180px;\\n  background-color: white;\\n  border: 1px solid #eaebec;\\n}\\n\\n#second-level #drop-status-menu ul {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\n#second-level #drop-status-menu ul li {\\n  font-weight: 300;\\n  padding: 10px 0 10px 5px;\\n}\\n\\n#second-level #drop-status-menu ul li:hover {\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #drop-report-menu  {\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#second-level #drop-report-menu button  {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#second-level #drop-report-menu button:hover {\\n  background-color: rgba(26, 177, 136, 0.8);\\n}\\n\\n#second-level #add-executor-bar {\\n  display: inline-block;\\n}\\n#second-level #add-executor-bar button {\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n#second-level #create-report-bar{\\n  position: absolute;\\n  left: 780px;\\n  top: 240px;\\n}\\n\\n#second-level #add-executor-bar select {\\n  padding: 5px 20px;\\n  font-size: 15px;\\n  font-weight: 300;\\n  cursor: pointer;\\n}\\n\\n#third-level {\\n  z-index: 1;\\n  display: block;\\n  color: black;\\n  font-weight: 300;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#third-level #select-end-date {\\n  display: inline-block;\\n}\\n\\n#third-level #timer {\\n  display: inline-block;\\n}\\n\\n#third-level #create-sub-task-bar {\\n  padding: 10px 0;\\n  margin-left: 10px;\\n  display: inline-block;\\n}\\n\\n#third-level #create-sub-task-bar #just-do-it-bar {\\n  font-size: 20px;\\n  cursor: pointer;\\n\\n}\\n\\n#third-level #create-sub-task-bar #subTaskNameInput {\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 20px;\\n  width: 100%;\\n}\\n\\n#fourth-level {\\n}\\n\\n#fourth-level #sub-task-list ul {\\n  padding: 0;\\n  margin: 0;\\n  width: auto;\\n  list-style: none;\\n  border-right: 5px solid rgba(26, 177, 136, 1);\\n  border-left: 5px solid rgba(26, 177, 136, 1);\\n}\\n\\n#fourth-level #sub-task-list ul li {\\n  padding: 6px 0;\\n  font-size: 15px;\\n  font-weight: 300;\\n  color: #828282;\\n  background-color: #FAFAFA;\\n  border-top: 1px solid #eaebec;\\n  cursor: pointer;\\n}\\n\\n#fourth-level #sub-task-list ul li:hover {\\n\\n  background-color: rgba(26, 177, 136, 0.8);\\n  color: white;\\n\\n  -moz-transition: all 0.5s ease-out 0s;\\n  -webkit-transition: all 0.5s ease-out 0s;\\n  transition: all 0.5s ease-out 0s;\\n}\\n\\n#fourth-level #sub-task-list ul li span {\\n  margin-left: 15px;\\n}\\n\\n#fifth-level {\\n  border-top: 1px solid #eaebec;\\n\\n}\\n#fifth-level #description-span {\\n  display: block;\\n  padding: 10px 0 5px 20px;\\n  font-size: 20px;\\n  font-weight: 200;\\n}\\n#fifth-level #description {\\n  padding: 5px 20px 20px 20px;\\n  min-width: 200px;\\n  min-height: 200px;\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#fifth-level textarea {\\n  padding: 5px 20px 20px 20px;\\n  font-size: 17px;\\n  min-width: 460px;\\n  min-height: 250px;\\n}\\n\\n#sixth-level{\\n  display: block;\\n}\\n\\n#sixth-level #report-bar{\\n  display: block;\\n}\\n\\n#sixth-level #report-bar ul{\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#sixth-level #report-bar ul li {\\n  border-bottom: 1px solid #eaebec;\\n}\\n\\n#sixth-level #report-bar ul li #report-bar-header {\\n  padding: 5px 0;\\n  color: white;\\n  background-color: rgba(26, 177, 136, 1);\\n}\\n\\n#sixth-level #report-bar ul li #author{\\n  margin-left: 10px;\\n  display: inline-block;\\n  font-size: 16px;\\n}\\n\\n#sixth-level #report-bar ul li #creation-date{\\n  float: right;\\n  display: inline-block;\\n  margin-right: 5px;\\n  font-size: 16px;\\n}\\n\\n#sixth-level #report-bar ul li #report{\\n  min-height: 50px;\\n  display:block;\\n  margin: 10px;\\n  font-size: 18px;\\n}\\n\\n#sixth-level #report-bar ul li #spend-time{\\n  display:block;\\n  margin: 0 0 5px 10px;\\n  font-size: 15px;\\n  color: rgba(26, 177, 136, 1);\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/taskManagement/taskManagement.css\n ** module id = 774\n ** module chunks = 1\n **/","module.exports = \"<div id=\\\"management-content\\\">\\n  <div id=\\\"first-level\\\">\\n    <div id=\\\"name-bar\\\"\\n         (click)=\\\"checkAccessToChangeName()\\\">\\n      <span id=\\\"task-name\\\"\\n            *ngIf=\\\"!showTaskNameInput\\\">\\n        {{task.name}}\\n      </span>\\n      <md-input id=\\\"taskNameInput\\\"\\n                *ngIf=\\\"showTaskNameInput\\\"\\n                #name [value]=\\\"task.name\\\"\\n                (keydown.enter)=\\\"changeName(name.value)\\\"\\n                (mouseleave)=\\\"changeName(name.value)\\\">\\n      </md-input>\\n    </div>\\n\\n    <div id=\\\"creation-date-bar\\\">\\n      Создана: {{task.creationDateTime}}\\n    </div>\\n\\n    <div id=\\\"owner-name-bar\\\">\\n      ( Владелец : {{task.owner.name}} )\\n    </div>\\n\\n    <div id=\\\"executor-name-bar\\\">\\n      <span *ngIf=\\\"task.executor!=undefined\\\">\\n        ( Исполнитель : {{task.executor.name}} )\\n      </span>\\n      <span *ngIf=\\\"task.executor==undefined\\\">\\n        Исполнитель не назначен\\n      </span>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"second-level\\\">\\n    <div id=\\\"status-bar\\\">\\n      <div (click)=\\\"openCloseStatusBar()\\\">\\n        <span>{{task.status}}</span>\\n        <img src=\\\"https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png\\\" width=\\\"5%\\\">\\n      </div>\\n      <div *ngIf=\\\" isStatusBarOpen\\\" id=\\\"drop-status-menu\\\"\\n           (mouseleave)=\\\"openCloseStatusBar()\\\">\\n        <ul>\\n          <li *ngFor=\\\"let status of statusList\\\"\\n              (click)=\\\"changeStatus(status)\\\">\\n            {{status}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n    <div id=\\\"drop-report-menu\\\">\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n              (click)=\\\"openCloseReportBar()\\\">\\n        Создать отчет\\n      </button>\\n      <div *ngIf=\\\"showReportBar\\\" id=\\\"create-report-bar\\\">\\n        <report-bar [task]=\\\"task\\\" (createdReport)=\\\"reportCreated($event)\\\"></report-bar>\\n      </div>\\n    </div>\\n\\n\\n    <div id=\\\"add-executor-bar\\\">\\n      <select [(ngModel)]=\\\"selectedUserName\\\"\\n              (ngModelChange)=\\\"userSelected()\\\">\\n        <option selected>Выбрать Исполнителя</option>\\n        <option *ngFor=\\\" let user of userList\\\">{{user.name}}\\n      </option>\\n      </select>\\n      <button md-raised-button class=\\\"md-raised md-primary\\\"\\n              (click)=\\\"addTaskExecutor()\\\">\\n        Добавить\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div id=\\\"third-level\\\">\\n    <!--  <div id=\\\"select-end-date\\\">\\n        <span>Выбрать дату окончания</span>\\n      </div>-->\\n    <div id=\\\"add-sub-task\\\">\\n\\n      <div id=\\\"create-sub-task-bar\\\"\\n           (click)=\\\"checkAccessToCreateSubTask()\\\">\\n      <span id=\\\"just-do-it-bar\\\"\\n            *ngIf=\\\"!showSubTaskNameInput\\\">\\n        + Добавить Подзадачу\\n      </span>\\n        <md-input id=\\\"subTaskNameInput\\\"\\n                  *ngIf=\\\"showSubTaskNameInput\\\"\\n                  #subTaskName\\n                  (keydown.enter)=\\\"createTask(subTaskName.value)\\\"\\n                  (mouseleave)=\\\"showSubTaskNameInput=false\\\">\\n        </md-input>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n  <!--  <div id=\\\"fourth-level\\\">\\n      <div id=\\\"sub-task-list\\\">\\n        <ul>\\n          <li *ngFor=\\\"let task of project.taskList\\\"\\n              (click)=\\\"moveToTask(task)\\\">\\n            <span>{{task.name}}</span>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>-->\\n\\n\\n  <div id=\\\"fifth-level\\\">\\n    <span id=\\\"description-span\\\">Описание:</span>\\n    <div id=\\\"task-description\\\">\\n      <div id=\\\"description\\\"\\n           *ngIf=\\\"!showTaskDescriptionTextArea\\\"\\n           (click)=\\\"checkAccessToChangeDescription()\\\">\\n        <span *ngIf=\\\"task.description==undefined ||task.description.length==0 \\\">\\n          Заполнить описание\\n        </span>\\n        <span\\n          *ngIf=\\\"task.description!=undefined\\\">\\n          {{task.description}}\\n        </span>\\n      </div>\\n\\n      <div id=\\\"descriptionTextArea\\\"\\n           *ngIf=\\\"showTaskDescriptionTextArea\\\">\\n        <textarea #descr [value]=\\\"task.description\\\"\\n                  (keydown.enter)=\\\"changeDescription(descr.value)\\\"\\n                  (mouseleave)=\\\"changeDescription(descr.value)\\\">\\n        </textarea>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div id=\\\"sixth-level\\\">\\n    <div id=\\\"report-bar\\\">\\n      <ul>\\n        <li *ngFor=\\\"let report of task.reportList\\\">\\n          <div id=\\\"report-bar-header\\\">\\n            <div id=\\\"author\\\"> Автор: {{report.creator.name}}</div>\\n            <div id=\\\"creation-date\\\">Создан:{{report.creationDateTime}}</div>\\n          </div>\\n          <div id=\\\"report\\\">{{report.report}}</div>\\n          <div id=\\\"spend-time\\\">Времени затрачено: {{report.workTime}}\\n            за {{report.workDate}}\\n          </div>\\n        </li>\\n      </ul>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/timeTracker/projects/taskManagement/taskManagement.html\n ** module id = 775\n ** module chunks = 1\n **/"],"sourceRoot":""}