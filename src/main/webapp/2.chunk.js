webpackJsonp([2],{751:function(t,e,r){"use strict";var o=r(1),n=r(136);r(219);var s=function(){function API_Report(t){this.http=t}return API_Report.prototype.getJsonHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/json"),t},API_Report.prototype.getUrlencodedHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/x-www-form-urlencoded"),t},API_Report.prototype.correctOffset=function(t){return t.replace("+","%2B")},API_Report.prototype.createReport=function(t,e,r,o,s){var a=this.getJsonHeader(),i=new n.URLSearchParams;i.set("utcOffset",this.correctOffset(s)),i.set("taskId",o);var p=JSON.stringify({report:t,workTime:e,workDate:r});return this.http.post("/api/report/createReport",p,{headers:a,search:i}).map(function(t){return t.json()})},API_Report.prototype.getTaskAllReportList=function(t,e){var r=this.getJsonHeader(),o=new n.URLSearchParams;return o.set("utcOffset",this.correctOffset(e)),o.set("taskId",t),this.http.get("/api/report/getTaskAllReportList",{headers:r,search:o}).map(function(t){return t.json()})},API_Report.prototype.getProjectReportList=function(t,e,r,o,s){var a=this.getJsonHeader(),i=new n.URLSearchParams;return i.set("utcOffset",this.correctOffset(t)),0!=e.length&&i.set("projectId",e),0!=r.length&&i.set("creatorId",r),0!=o.length&&i.set("startDate",o),0!=s.length&&i.set("endDate",s),this.http.get("/api/report/getProjectReportList",{headers:a,search:i}).map(function(t){return t.json()})},API_Report.prototype.getTaskReportList=function(t,e,r,o,s){var a=this.getJsonHeader(),i=new n.URLSearchParams;return i.set("utcOffset",this.correctOffset(t)),0!=e.length&&i.set("taskId",e),0!=r.length&&i.set("creatorId",r),0!=o.length&&i.set("startDate",o),0!=s.length&&i.set("endDate",s),this.http.get("/api/report/getTaskReportList",{headers:a,search:i}).map(function(t){return t.json()})},API_Report=__decorate([o.Injectable(),__metadata("design:paramtypes",[n.Http])],API_Report)}();e.API_Report=s},750:function(t,e,r){"use strict";var o=r(1),n=r(136);r(219);var s=function(){function API_Task(t){this.http=t}return API_Task.prototype.getJsonHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/json"),t},API_Task.prototype.getUrlencodedHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/x-www-form-urlencoded"),t},API_Task.prototype.correctOffset=function(t){return t.replace("+","%2B")},API_Task.prototype.getProjectHighTaskList=function(t,e){var r=this.getUrlencodedHeader(),o=new n.URLSearchParams;return o.set("projectId",t),o.set("utcOffset",this.correctOffset(e)),this.http.get("/api/task/getProjectHighTaskList",{headers:r,search:o}).map(function(t){return t.json()})},API_Task.prototype.getCreatedTaskList=function(t){var e=this.getUrlencodedHeader(),r=new n.URLSearchParams;return r.set("utcOffset",this.correctOffset(t)),this.http.get("/api/task/getCreatedTaskList",{headers:e,search:r}).map(function(t){return t.json()})},API_Task.prototype.createTask=function(t,e,r){var o=this.getJsonHeader(),s=new n.URLSearchParams;s.set("utcOffset",this.correctOffset(r));var a=JSON.stringify({name:t,ancestorProjectId:e});return this.http.post("/api/task/createTask",a,{headers:o,search:s}).map(function(t){return t.json()})},API_Task.prototype.addTaskExecutor=function(t,e){var r=JSON.stringify({id:e}),o=this.getJsonHeader(),s=new n.URLSearchParams;return s.set("taskId",t),this.http.put("/api/task/addTaskExecutor",r,{headers:o,search:s}).map(function(t){return t.json()})},API_Task.prototype.changeName=function(t,e){var r=JSON.stringify({id:t,name:e}),o=this.getJsonHeader();return this.http.put("/api/task/setName",r,{headers:o}).map(function(t){return t.json()})},API_Task.prototype.changeStatus=function(t,e){var r=JSON.stringify({id:t,status:e}),o=this.getJsonHeader();return this.http.put("/api/task/setStatus",r,{headers:o}).map(function(t){return t.json()})},API_Task.prototype.changeDescription=function(t,e){var r=JSON.stringify({id:t,description:e}),o=this.getJsonHeader();return this.http.put("/api/task/setDescription",r,{headers:o}).map(function(t){return t.json()})},API_Task.prototype.checkLowLevelAuthorities=function(t){var e=this.getUrlencodedHeader(),r=new n.URLSearchParams;return r.set("id",t),this.http.get("/api/task/checkLowLevelAuthorities",{headers:e,search:r}).map(function(t){return t.json()})},API_Task=__decorate([o.Injectable(),__metadata("design:paramtypes",[n.Http])],API_Task)}();e.API_Task=s},753:function(t,e,r){"use strict";var o=r(1),n=r(136);r(219);var s=function(){function API_User(t){this.http=t}return API_User.prototype.getJsonHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/json"),t},API_User.prototype.getUrlencodedHeader=function(){var t=new n.Headers;return t.append("Content-Type","application/x-www-form-urlencoded"),t},API_User.prototype.correctOffset=function(t){return t.replace("+","%2B")},API_User.prototype.getUserList=function(){this.getUrlencodedHeader();return this.http.get("/api/user/getUserList").map(function(t){return t.json()})},API_User.prototype.getParticipantProjectUserList=function(t){var e=this.getUrlencodedHeader(),r=new n.URLSearchParams;return void 0!=t&&r.set("projectId",t),this.http.get("/api/user/getParticipantProjectUserList",{headers:e,search:r}).map(function(t){return t.json()})},API_User.prototype.getParticipantTaskUserList=function(t){var e=this.getUrlencodedHeader(),r=new n.URLSearchParams;return r.set("taskId",t),this.http.get("/api/user/getParticipantTaskUserList",{headers:e,search:r}).map(function(t){return t.json()})},API_User=__decorate([o.Injectable(),__metadata("design:paramtypes",[n.Http])],API_User)}();e.API_User=s},752:function(t,e,r){"use strict";var o=r(748),n=function(t){function ProjectDTO(){t.apply(this,arguments),this.taskList=[]}return __extends(ProjectDTO,t),ProjectDTO}(o.Serializable);e.ProjectDTO=n},754:function(t,e,r){"use strict";var o=r(748),n=function(t){function ReportDTO(){t.apply(this,arguments)}return __extends(ReportDTO,t),ReportDTO}(o.Serializable);e.ReportDTO=n},757:function(t,e,r){"use strict";var o=r(748),n=function(t){function ReporterDTO(){t.apply(this,arguments),this.reportList=[]}return __extends(ReporterDTO,t),ReporterDTO}(o.Serializable);e.ReporterDTO=n},748:function(t,e){"use strict";var r=function(){function Serializable(){}return Serializable.prototype.fillFromJSON=function(t){var e=JSON.parse(t);for(var r in e)this[r]=e[r]},Serializable}();e.Serializable=r},749:function(t,e,r){"use strict";var o=r(748),n=function(t){function TaskDTO(){t.apply(this,arguments),this.reporterList=[]}return __extends(TaskDTO,t),TaskDTO}(o.Serializable);e.TaskDTO=n},755:function(t,e,r){"use strict";var o=r(748),n=function(t){function UserDTO(){t.apply(this,arguments)}return __extends(UserDTO,t),UserDTO}(o.Serializable);e.UserDTO=n},763:function(t,e,r){"use strict";var o=r(1),n=function(){function ReportShowBar(){}return ReportShowBar.prototype.ngOnInit=function(){},__decorate([o.Input(),__metadata("design:type",Object)],ReportShowBar.prototype,"reportList",void 0),ReportShowBar=__decorate([o.Component({selector:"report-show-bar",providers:[],directives:[],pipes:[],encapsulation:o.ViewEncapsulation.Native,styles:[r(778)],template:r(779)}),__metadata("design:paramtypes",[])],ReportShowBar)}();e.ReportShowBar=n},778:565,779:function(t,e){t.exports="<h1>SHowBar как=никак</h1>\n"},466:function(t,e,r){"use strict";var o=r(1),n=r(53),s=r(751),a=r(463),i=r(750),p=r(753),c=r(752),u=r(749),h=r(754),l=r(757),d=r(755),f=r(462),g=r(763),T=function(){function Reports(t,e,r,o,n,s){this.api_Report=t,this.api_Project=e,this.api_Task=r,this.api_User=o,this.dateFormatter=n,this.formBuilder=s,this.reportTypeList=["Проект","Задача"],this.projectList=[],this.taskList=[],this.participantList=[],this.reportProjectList=[]}return Reports.prototype.ngOnInit=function(){this.reportForm=this.formBuilder.group({reportType:["",n.Validators.required],projectOrTaskId:[""],userId:[""],startDate:[""],endDate:[""]})},Reports.prototype.createReport=function(t){t.reportType==this.reportTypeList[0]&&(0==this.participantList.length?console.log("Отчеты по проектам отсутствуют, т.к нету исполнителей"):this.createProjectReport(t)),t.reportType==this.reportTypeList[1]&&(0==this.participantList.length?console.log("Отчеты по задачам отсутствуют, т.к нету исполнителей"):this.createTaskReport(t))},Reports.prototype.createProjectReport=function(t){var e=this;this.api_Report.getProjectReportList(this.dateFormatter.getUtcOffset(),t.projectOrTaskId,t.userId,t.startDate,t.endDate).subscribe(function(t){console.log(t),e.reportList=t.responseObjects.reportProjectList,e.fillDetailReportProjectList(t.responseObjects.reportProjectList),console.log(e.reportProjectList)},function(t){console.log(t)})},Reports.prototype.createTaskReport=function(t){var e=this;this.api_Report.getTaskReportList(this.dateFormatter.getUtcOffset(),t.projectOrTaskId,t.userId,t.startDate,t.endDate).subscribe(function(t){console.log(t),e.reportList=t.responseObjects.reportList},function(t){console.log(t)})},Reports.prototype.getProjectOrTaskList=function(t){this.participantList.splice(0),this.getProjectParticipant(),t===this.reportTypeList[0]&&0==this.projectList.length&&this.getProjectList(),t===this.reportTypeList[1]&&0==this.taskList.length&&this.getTaskList()},Reports.prototype.getProjectList=function(){var t=this;this.api_Project.getCreatedProjectList(this.dateFormatter.getUtcOffset()).subscribe(function(e){console.log(e),t.pushTransferProjectListToDTO(e.responseObjects.projectList)},function(t){console.log(t)})},Reports.prototype.getTaskList=function(){var t=this;this.api_Task.getCreatedTaskList(this.dateFormatter.getUtcOffset()).subscribe(function(e){console.log(e),t.pushTransferTaskListToDTO(e.responseObjects.taskList)},function(t){console.log(t)})},Reports.prototype.pushTransferProjectListToDTO=function(t){for(var e=0;e<t.length;e++){var r=new c.ProjectDTO;r.fillFromJSON(JSON.stringify(t[e])),r.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(r.creationDateTime,"Do MMMM YYYY"),this.projectList.push(r)}},Reports.prototype.pushTransferTaskListToDTO=function(t){for(var e=0;e<t.length;e++){var r=new u.TaskDTO;r.fillFromJSON(JSON.stringify(t[e])),r.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(r.creationDateTime,"Do MMMM YYYY"),this.taskList.push(r)}},Reports.prototype.getParticipantUserList=function(t,e){this.participantList.splice(0),0!=e.length?(t==this.reportTypeList[0]&&this.getProjectParticipant(e),t==this.reportTypeList[1]&&this.getTaskParticipant(e)):this.getProjectParticipant()},Reports.prototype.getProjectParticipant=function(t){var e=this;this.api_User.getParticipantProjectUserList(t).subscribe(function(t){console.log(t);for(var r=0;r<t.responseObjects.userList.length;r++){var o=new d.UserDTO;o.fillFromJSON(JSON.stringify(t.responseObjects.userList[r])),e.participantList.push(o)}},function(t){console.log(t)})},Reports.prototype.getTaskParticipant=function(t){var e=this;this.api_User.getParticipantTaskUserList(t).subscribe(function(t){console.log(t);for(var r=0;r<t.responseObjects.userList.length;r++){var o=new d.UserDTO;o.fillFromJSON(JSON.stringify(t.responseObjects.userList[r])),e.participantList.push(o)}},function(t){console.log(t)})},Reports.prototype.fillDetailReportProjectList=function(t){for(var e=0;e<t.length;e++){var r=new c.ProjectDTO;r.id=t[e].id,r.name=t[e].name,console.log(r);for(var o=0;o<t[e].taskList.length;o++){var n=new u.TaskDTO;n.id=t[e].taskList[o].id,n.name=t[e].taskList[o].name,console.log(n);for(var s=0;s<t[e].taskList[o].reporterList.length;s++){var a=new l.ReporterDTO;a.id=t[s].taskList[o].reporterList[s].id,a.name=t[e].taskList[o].reporterList[s].name,a.taskElapsedTime=t[e].taskList[o].reporterList[s].taskElapsedTime,console.log(a);for(var i=0;i<t[e].taskList[o].reporterList[s].reportList.length;s++){var p=new h.ReportDTO;p.fillFromJSON(JSON.stringify(t[e].taskList[o].reporterList[s].reportList[i])),p.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(p.creationDateTime,"Do MMMM YYYY"),console.log(p),a.reportList.push(p),console.log("ОПа")}n.reporterList.push(a)}r.taskList.push(n)}this.reportProjectList.push(r)}},Reports=__decorate([o.Component({selector:"reports",providers:[a.API_Project,i.API_Task,p.API_User,s.API_Report],directives:[g.ReportShowBar],pipes:[],encapsulation:o.ViewEncapsulation.Native,styles:[r(780)],template:r(781)}),__metadata("design:paramtypes",[s.API_Report,a.API_Project,i.API_Task,p.API_User,f.DateFormatter,n.FormBuilder])],Reports)}();e.Reports=T},780:565,781:function(t,e){t.exports='<form id="reportForm"\n      [ngFormModel]="reportForm"\n      (ngSubmit)="createReport(reportForm.value)">\n\n  <div id="reportType">\n    <select [ngFormControl]="reportForm.controls[\'reportType\']"\n            (ngModelChange)="getProjectOrTaskList(reportForm.value.reportType)">\n\n      <option value="">Выберите тип отчета</option>\n\n      <option\n        *ngFor="let reportType of reportTypeList">\n        {{reportType}}\n      </option>\n\n    </select>\n  </div>\n\n  <div id="projectOrTaskId">\n    <select [ngFormControl]="reportForm.controls[\'projectOrTaskId\']"\n            (ngModelChange)="getParticipantUserList(reportForm.value.reportType,\n                                                    reportForm.value.projectOrTaskId)"\n            [disabled]="reportForm.value.reportType=== \'\' ">\n\n      <option *ngIf="reportForm.value.reportType=== \'\' "\n              value="">\n        Для начала выберите тип отчета\n      </option>\n\n      <option *ngIf="reportForm.value.reportType===reportTypeList[0]"\n              value="">\n        Выберите Проект\n      </option>\n\n      <option *ngIf="reportForm.value.reportType===reportTypeList[1]"\n              value="">\n        Выберите Задачу\n      </option>\n\n      <template [ngIf]="reportForm.value.reportType===reportTypeList[0]">\n        <option *ngFor="let project of projectList"\n                [value]="project.id">\n          {{project.name}}\n        </option>\n      </template>\n\n      <template [ngIf]="reportForm.value.reportType===reportTypeList[1]">\n        <option *ngFor="let task of taskList"\n                [value]="task.id">\n          {{task.name}}\n        </option>\n      </template>\n\n    </select>\n  </div>\n\n  <div id="creatorId">\n    <select [ngFormControl]="reportForm.controls[\'userId\']"\n            [disabled]="reportForm.value.reportType=== \'\' ">\n\n      <option value="">\n        Выберите пользователя\n      </option>\n\n      <template [ngIf]="reportForm.value.reportType!= \'\' &&\n                participantList.length == 0">\n        <option selected value="">\n          Нету назначенных исполнителей\n        </option>\n      </template>\n\n      <template [ngIf]="reportForm.value.reportType!= \'\' ">\n        <option [value]="user.id"\n                *ngFor="let user of participantList">\n          {{user.name}}\n        </option>\n      </template>\n    </select>\n  </div>\n\n  <div id="dates">\n\n    <label for="startDate">С</label>\n    <input [ngFormControl]="reportForm.controls[\'startDate\']"\n           [disabled]="reportForm.value.reportType=== \'\' "\n           id="startDate" type="date">\n\n    <label for="endDate">По</label>\n    <input [ngFormControl]="reportForm.controls[\'endDate\']"\n           [disabled]="reportForm.value.reportType=== \'\' "\n           id="endDate" type="date">\n  </div>\n\n  <button type="submit"\n          [disabled]="!reportForm.valid">\n    Создать отчет\n  </button>\n</form>\n\n\n<div id="report-show-bar">\n  <report-show-bar\n    [reportList]="reportList">\n\n  </report-show-bar>\n</div>\n\n\n\n\n\n\n\n\n\n'}});
//# sourceMappingURL=2.bundle.map