webpackJsonp([2],{753:function(t,e,r){"use strict";var n=r(1),o=r(99);r(137);var s=function(){function API_Report(t){this.http=t}return API_Report.prototype.getJsonHeader=function(){var t=new o.Headers;return t.append("Content-Type","application/json"),t},API_Report.prototype.getUrlencodedHeader=function(){var t=new o.Headers;return t.append("Content-Type","application/x-www-form-urlencoded"),t},API_Report.prototype.correctOffset=function(t){return t.replace("+","%2B")},API_Report.prototype.createReport=function(t,e,r,n,s){var a=this.getJsonHeader(),i=new o.URLSearchParams;i.set("utcOffset",this.correctOffset(s)),i.set("taskId",n);var p=JSON.stringify({report:t,workTime:e,workDate:r});return this.http.post("/api/report/createReport",p,{headers:a,search:i}).map(function(t){return t.json()})},API_Report.prototype.getTaskReporterList=function(t,e){var r=this.getJsonHeader(),n=new o.URLSearchParams;return n.set("utcOffset",this.correctOffset(e)),n.set("taskId",t),this.http.get("/api/report/getTaskReporterList",{headers:r,search:n}).map(function(t){return t.json()})},API_Report.prototype.getReportList=function(t,e,r,n,s,a){var i=this.getJsonHeader(),p=new o.URLSearchParams;return p.set("utcOffset",this.correctOffset(t)),"Проект"==e&&p.set("reportType","1"),"Задача"==e&&p.set("reportType","2"),0!=r.length&&p.set("projectOrTaskId",r),0!=n.length&&p.set("creatorId",n),0!=s.length&&p.set("startDate",s),0!=a.length&&p.set("endDate",a),this.http.get("/api/report/getReportList",{headers:i,search:p}).map(function(t){return t.json()})},API_Report.prototype.getTaskReportList=function(t,e,r,n,s){var a=this.getJsonHeader(),i=new o.URLSearchParams;return i.set("utcOffset",this.correctOffset(t)),0!=e.length&&i.set("taskId",e),0!=r.length&&i.set("creatorId",r),0!=n.length&&i.set("startDate",n),0!=s.length&&i.set("endDate",s),this.http.get("/api/report/getTaskReportList",{headers:a,search:i}).map(function(t){return t.json()})},API_Report=__decorate([n.Injectable(),__metadata("design:paramtypes",[o.Http])],API_Report)}();e.API_Report=s},751:function(t,e,r){"use strict";var n=r(1),o=r(99);r(137);var s=function(){function API_Task(t){this.http=t}return API_Task.prototype.getJsonHeader=function(){var t=new o.Headers;return t.append("Content-Type","application/json"),t},API_Task.prototype.getUrlencodedHeader=function(){var t=new o.Headers;return t.append("Content-Type","application/x-www-form-urlencoded"),t},API_Task.prototype.correctOffset=function(t){return t.replace("+","%2B")},API_Task.prototype.getProjectHighTaskList=function(t,e){var r=this.getUrlencodedHeader(),n=new o.URLSearchParams;return n.set("projectId",t),n.set("utcOffset",this.correctOffset(e)),this.http.get("/api/task/getProjectHighTaskList",{headers:r,search:n}).map(function(t){return t.json()})},API_Task.prototype.getCreatedTaskList=function(t){var e=this.getUrlencodedHeader(),r=new o.URLSearchParams;return r.set("utcOffset",this.correctOffset(t)),this.http.get("/api/task/getCreatedTaskList",{headers:e,search:r}).map(function(t){return t.json()})},API_Task.prototype.createTask=function(t,e,r){var n=this.getJsonHeader(),s=new o.URLSearchParams;s.set("utcOffset",this.correctOffset(r)),s.set("ancestorProjectId",e);var a=JSON.stringify({name:t});return this.http.post("/api/task/createTask",a,{headers:n,search:s}).map(function(t){return t.json()})},API_Task.prototype.addTaskExecutor=function(t,e){var r=JSON.stringify({id:e}),n=this.getJsonHeader(),s=new o.URLSearchParams;return s.set("taskId",t),this.http.put("/api/task/addTaskExecutor",r,{headers:n,search:s}).map(function(t){return t.json()})},API_Task.prototype.changeName=function(t,e){var r=JSON.stringify({id:t,name:e}),n=this.getJsonHeader();return this.http.put("/api/task/setName",r,{headers:n}).map(function(t){return t.json()})},API_Task.prototype.changeStatus=function(t,e){var r=JSON.stringify({id:t,status:e}),n=this.getJsonHeader();return this.http.put("/api/task/setStatus",r,{headers:n}).map(function(t){return t.json()})},API_Task.prototype.changeDescription=function(t,e){var r=JSON.stringify({id:t,description:e}),n=this.getJsonHeader();return this.http.put("/api/task/setDescription",r,{headers:n}).map(function(t){return t.json()})},API_Task.prototype.checkLowLevelAuthorities=function(t){var e=this.getUrlencodedHeader(),r=new o.URLSearchParams;return r.set("id",t),this.http.get("/api/task/checkLowLevelAuthorities",{headers:e,search:r}).map(function(t){return t.json()})},API_Task.prototype.checkHighLevelAuthorities=function(t){var e=this.getUrlencodedHeader(),r=new o.URLSearchParams;return r.set("id",t),this.http.get("/api/task/checkHighLevelAuthorities",{headers:e,search:r}).map(function(t){return t.json()})},API_Task=__decorate([n.Injectable(),__metadata("design:paramtypes",[o.Http])],API_Task)}();e.API_Task=s},752:function(t,e,r){"use strict";var n=r(749),o=function(t){function ProjectDTO(){t.apply(this,arguments),this.taskList=[]}return __extends(ProjectDTO,t),ProjectDTO}(n.Serializable);e.ProjectDTO=o},756:function(t,e,r){"use strict";var n=r(749),o=function(t){function ReportDTO(){t.apply(this,arguments)}return __extends(ReportDTO,t),ReportDTO}(n.Serializable);e.ReportDTO=o},754:function(t,e,r){"use strict";var n=r(749),o=function(t){function ReporterDTO(){t.apply(this,arguments),this.reportList=[]}return __extends(ReporterDTO,t),ReporterDTO}(n.Serializable);e.ReporterDTO=o},749:function(t,e){"use strict";var r=function(){function Serializable(){}return Serializable.prototype.fillFromJSON=function(t){var e=JSON.parse(t);for(var r in e)this[r]=e[r]},Serializable}();e.Serializable=r},750:function(t,e,r){"use strict";var n=r(749),o=function(t){function TaskDTO(){t.apply(this,arguments),this.reporterList=[]}return __extends(TaskDTO,t),TaskDTO}(n.Serializable);e.TaskDTO=o},755:function(t,e,r){"use strict";var n=r(749),o=function(t){function UserDTO(){t.apply(this,arguments)}return __extends(UserDTO,t),UserDTO}(n.Serializable);e.UserDTO=o},762:function(t,e,r){"use strict";var n=r(1),o=function(){function ReportShowBar(){this.showErrorMessage=!1}return ReportShowBar.prototype.ngOnInit=function(){},ReportShowBar.prototype.ngDoCheck=function(){"true"==this.reportCreated?0!=this.reportProjectList.length?this.showErrorMessage=!1:this.showErrorMessage=!0:this.showErrorMessage=!1},__decorate([n.Input(),__metadata("design:type",Array)],ReportShowBar.prototype,"reportProjectList",void 0),__decorate([n.Input(),__metadata("design:type",String)],ReportShowBar.prototype,"reportCreated",void 0),ReportShowBar=__decorate([n.Component({selector:"report-show-bar",providers:[],directives:[],pipes:[],encapsulation:n.ViewEncapsulation.Native,styles:[r(777)],template:r(778)}),__metadata("design:paramtypes",[])],ReportShowBar)}();e.ReportShowBar=o},777:function(t,e){t.exports="#report-bar{\n  width: 40%;\n}\n\nul {\n  list-style: none;\n}\n\n#project-part {\n  padding: 5px;\n  color: white;\n  font-size: 20px;\n  background-color: rgba(26, 177, 136, 1);\n}\n\n#task-part {\n  padding: 3px;\n  color: white;\n  font-size: 18px;\n  background-color: rgba(26, 177, 136, 0.8);\n}\n\n#reporter-part {\n  padding: 2px;\n  color: white;\n  font-size: 16px;\n  background-color: rgba(26, 177, 136, 0.6);\n}\n\n#report-part {\n  margin: 2px 0;\n  background: white;\n}\n\n#report-part p {\n  margin: 0 0 5px 2px;\n  padding: 2px;\n  font-size: 16px;\n}\n\n#report-part span {\n  padding: 2px;\n  margin-right: 5px;\n  font-size: 14px;\n  color: rgba(26, 177, 136, 1)\n}\n\n"},778:function(t,e){t.exports='<div id="report-bar">\n  <span *ngIf="showErrorMessage">\n    Отчеты по данным критериям отсутствуют\n  </span>\n  <ul>\n    <li *ngFor="let project of reportProjectList">\n      <div id="project-part">\n        <span>Проект: {{project.name}}</span>\n      </div>\n      <ul>\n        <li *ngFor="let task of project.taskList">\n          <div id="task-part">\n            <span>Задание: {{task.name}}</span>\n          </div>\n          <ul>\n            <li *ngFor="let reporter of task.reporterList">\n              <div id="reporter-part">\n                <span> Репортер: {{reporter.name}}</span>\n                <span> Общее затраченное время: {{reporter.taskElapsedTime}}</span>\n                <span> Отчеты: </span>\n              </div>\n              <ul>\n                <li *ngFor="let report of reporter.reportList">\n                  <div id="report-part">\n                    <p>{{report.report}}</p>\n                    <span>\n                      Времени затрачено: {{report.workTime}}\n                    </span>\n                    <span>Отчет за: {{report.workDate}}</span>\n                  </div>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        <li>\n      </ul>\n\n    </li>\n  </ul>\n</div>\n'},467:function(t,e,r){"use strict";var n=r(1),o=r(53),s=r(753),a=r(464),i=r(751),p=r(463),c=r(752),u=r(750),h=r(756),l=r(754),d=r(755),f=r(462),g=r(762),T=function(){function Reports(t,e,r,n,o,s){this.api_Report=t,this.api_Project=e,this.api_Task=r,this.api_User=n,this.dateFormatter=o,this.formBuilder=s,this.reportTypeList=["Проект","Задача"],this.projectList=[],this.taskList=[],this.participantList=[],this.reportProjectList=[],this.reportCreated="false"}return Reports.prototype.ngOnInit=function(){this.reportForm=this.formBuilder.group({reportType:["",o.Validators.required],projectOrTaskId:[""],userId:[""],startDate:[""],endDate:[""]})},Reports.prototype.getReport=function(t){var e=this;0!=this.reportProjectList.length&&this.reportProjectList.splice(0),0!=this.participantList.length?this.api_Report.getReportList(this.dateFormatter.getUtcOffset(),t.reportType,t.projectOrTaskId,t.userId,t.startDate,t.endDate).subscribe(function(t){e.fillDetailReportProjectList(t.responseObjects.reportProjectList),e.reportCreated="true"},function(t){console.log(t)}):t.reportType==this.reportTypeList[0]?console.log("Отчеты по проектам отсутствуют, т.к нету исполнителей"):console.log("Отчеты по задачам отсутствуют, т.к нету исполнителей")},Reports.prototype.getProjectOrTaskList=function(t){this.participantList.splice(0),this.getProjectParticipant(),t===this.reportTypeList[0]&&0==this.projectList.length&&this.getProjectList(),t===this.reportTypeList[1]&&0==this.taskList.length&&this.getTaskList()},Reports.prototype.getProjectList=function(){var t=this;this.api_Project.getCreatedProjectList(this.dateFormatter.getUtcOffset()).subscribe(function(e){t.pushTransferProjectListToDTO(e.responseObjects.projectList)},function(t){console.log(t)})},Reports.prototype.getTaskList=function(){var t=this;this.api_Task.getCreatedTaskList(this.dateFormatter.getUtcOffset()).subscribe(function(e){t.pushTransferTaskListToDTO(e.responseObjects.taskList)},function(t){console.log(t)})},Reports.prototype.pushTransferProjectListToDTO=function(t){for(var e=0;e<t.length;e++){var r=new c.ProjectDTO;r.fillFromJSON(JSON.stringify(t[e])),r.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(r.creationDateTime,"Do MMMM YYYY"),this.projectList.push(r)}},Reports.prototype.pushTransferTaskListToDTO=function(t){for(var e=0;e<t.length;e++){var r=new u.TaskDTO;r.fillFromJSON(JSON.stringify(t[e])),r.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(r.creationDateTime,"Do MMMM YYYY"),this.taskList.push(r)}},Reports.prototype.getParticipantUserList=function(t,e){this.participantList.splice(0),0!=e.length?(t==this.reportTypeList[0]&&this.getProjectParticipant(e),t==this.reportTypeList[1]&&this.getTaskParticipant(e)):this.getProjectParticipant()},Reports.prototype.getProjectParticipant=function(t){var e=this;this.api_User.getParticipantProjectUserList(t).subscribe(function(t){console.log(t);for(var r=0;r<t.responseObjects.userList.length;r++){var n=new d.UserDTO;n.fillFromJSON(JSON.stringify(t.responseObjects.userList[r])),e.participantList.push(n)}},function(t){console.log(t)})},Reports.prototype.getTaskParticipant=function(t){var e=this;this.api_User.getParticipantTaskUserList(t).subscribe(function(t){console.log(t);for(var r=0;r<t.responseObjects.userList.length;r++){var n=new d.UserDTO;n.fillFromJSON(JSON.stringify(t.responseObjects.userList[r])),e.participantList.push(n)}},function(t){console.log(t)})},Reports.prototype.fillDetailReportProjectList=function(t){for(var e=0;e<t.length;e++){var r=new c.ProjectDTO;r.id=t[e].id,r.name=t[e].name;for(var n=0;n<t[e].taskList.length;n++){var o=new u.TaskDTO;o.id=t[e].taskList[n].id,o.name=t[e].taskList[n].name;for(var s=0;s<t[e].taskList[n].reporterList.length;s++){var a=new l.ReporterDTO;a.id=t[e].taskList[n].reporterList[s].id,a.name=t[e].taskList[n].reporterList[s].name,a.taskElapsedTime=t[e].taskList[n].reporterList[s].taskElapsedTime;for(var i=0;i<t[e].taskList[n].reporterList[s].reportList.length;i++){var p=new h.ReportDTO;p.fillFromJSON(JSON.stringify(t[e].taskList[n].reporterList[s].reportList[i])),p.workTime=this.dateFormatter.transformTime(p.workTime),p.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(p.creationDateTime,"Do MMMM YYYY"),a.reportList.push(p)}o.reporterList.push(a)}r.taskList.push(o)}this.reportProjectList.push(r)}},Reports=__decorate([n.Component({selector:"reports",providers:[a.API_Project,i.API_Task,p.API_User,s.API_Report],directives:[g.ReportShowBar],pipes:[],encapsulation:n.ViewEncapsulation.Native,styles:[r(779)],template:r(780)}),__metadata("design:paramtypes",[s.API_Report,a.API_Project,i.API_Task,p.API_User,f.DateFormatter,o.FormBuilder])],Reports)}();e.Reports=T},779:function(t,e){t.exports="\n"},780:function(t,e){t.exports='<form id="reportForm"\n      [ngFormModel]="reportForm"\n      (ngSubmit)="getReport(reportForm.value)">\n\n  <div id="reportType">\n    <select [ngFormControl]="reportForm.controls[\'reportType\']"\n            (ngModelChange)="getProjectOrTaskList(reportForm.value.reportType)">\n\n      <option value="">Выберите тип отчета</option>\n\n      <option\n        *ngFor="let reportType of reportTypeList">\n        {{reportType}}\n      </option>\n\n    </select>\n  </div>\n\n  <div id="projectOrTaskId">\n    <select [ngFormControl]="reportForm.controls[\'projectOrTaskId\']"\n            (ngModelChange)="getParticipantUserList(reportForm.value.reportType,\n                                                    reportForm.value.projectOrTaskId)"\n            [disabled]="reportForm.value.reportType=== \'\' ">\n\n      <option *ngIf="reportForm.value.reportType=== \'\' "\n              value="">\n        Для начала выберите тип отчета\n      </option>\n\n      <option *ngIf="reportForm.value.reportType===reportTypeList[0]"\n              value="">\n        Выберите Проект\n      </option>\n\n      <option *ngIf="reportForm.value.reportType===reportTypeList[1]"\n              value="">\n        Выберите Задачу\n      </option>\n\n      <template [ngIf]="reportForm.value.reportType===reportTypeList[0]">\n        <option *ngFor="let project of projectList"\n                [value]="project.id">\n          {{project.name}}\n        </option>\n      </template>\n\n      <template [ngIf]="reportForm.value.reportType===reportTypeList[1]">\n        <option *ngFor="let task of taskList"\n                [value]="task.id">\n          {{task.name}}\n        </option>\n      </template>\n\n    </select>\n  </div>\n\n  <div id="creatorId">\n    <select [ngFormControl]="reportForm.controls[\'userId\']"\n            [disabled]="reportForm.value.reportType=== \'\' ">\n\n      <option value="">\n        Выберите пользователя\n      </option>\n\n      <template [ngIf]="reportForm.value.reportType!= \'\' &&\n                participantList.length == 0">\n        <option selected value="">\n          Нету назначенных исполнителей\n        </option>\n      </template>\n\n      <template [ngIf]="reportForm.value.reportType!= \'\' ">\n        <option [value]="user.id"\n                *ngFor="let user of participantList">\n          {{user.userName}}\n        </option>\n      </template>\n    </select>\n  </div>\n\n  <div id="dates">\n\n    <label for="startDate">С</label>\n    <input [ngFormControl]="reportForm.controls[\'startDate\']"\n           [disabled]="reportForm.value.reportType=== \'\' "\n           id="startDate" type="date">\n\n    <label for="endDate">По</label>\n    <input [ngFormControl]="reportForm.controls[\'endDate\']"\n           [disabled]="reportForm.value.reportType=== \'\' "\n           id="endDate" type="date">\n  </div>\n\n  <button type="submit"\n          [disabled]="!reportForm.valid">\n    Создать отчет\n  </button>\n</form>\n\n\n<div id="report-show-bar">\n\n  <report-show-bar\n    [reportProjectList]="reportProjectList"\n    [reportCreated]="reportCreated">\n  </report-show-bar>\n\n</div>\n\n\n\n\n\n\n\n\n\n'}});
//# sourceMappingURL=2.bundle.map