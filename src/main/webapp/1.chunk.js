webpackJsonp([1],{752:function(n,e,t){"use strict";var r=t(1),o=t(136);t(219);var i=function(){function API_Report(n){this.http=n}return API_Report.prototype.getJsonHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/json"),n},API_Report.prototype.getUrlencodedHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/x-www-form-urlencoded"),n},API_Report.prototype.correctOffset=function(n){return n.replace("+","%2B")},API_Report.prototype.createReport=function(n,e,t,r,i){var a=this.getJsonHeader(),s=new o.URLSearchParams;s.set("utcOffset",this.correctOffset(i)),s.set("taskId",r);var c=JSON.stringify({report:n,workTime:e,workDate:t});return this.http.post("/api/report/createReport",c,{headers:a,search:s}).map(function(n){return n.json()})},API_Report.prototype.getTaskAllReportList=function(n,e){var t=this.getJsonHeader(),r=new o.URLSearchParams;return r.set("utcOffset",this.correctOffset(e)),r.set("taskId",n),this.http.get("/api/report/getTaskAllReportList",{headers:t,search:r}).map(function(n){return n.json()})},API_Report=__decorate([r.Injectable(),__metadata("design:paramtypes",[o.Http])],API_Report)}();e.API_Report=i},751:function(n,e,t){"use strict";var r=t(1),o=t(136);t(219);var i=function(){function API_Task(n){this.http=n}return API_Task.prototype.getJsonHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/json"),n},API_Task.prototype.getUrlencodedHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/x-www-form-urlencoded"),n},API_Task.prototype.correctOffset=function(n){return n.replace("+","%2B")},API_Task.prototype.getProjectHighTaskList=function(n,e){var t=this.getUrlencodedHeader(),r=new o.URLSearchParams;return r.set("projectId",n),r.set("utcOffset",this.correctOffset(e)),this.http.get("/api/task/getProjectHighTaskList",{headers:t,search:r}).map(function(n){return n.json()})},API_Task.prototype.getCreatedTaskList=function(n){var e=this.getUrlencodedHeader(),t=new o.URLSearchParams;return t.set("utcOffset",this.correctOffset(n)),this.http.get("/api/task/getCreatedTaskList",{headers:e,search:t}).map(function(n){return n.json()})},API_Task.prototype.createTask=function(n,e,t){var r=this.getJsonHeader(),i=new o.URLSearchParams;i.set("utcOffset",this.correctOffset(t));var a=JSON.stringify({name:n,ancestorProjectId:e});return this.http.post("/api/task/createTask",a,{headers:r,search:i}).map(function(n){return n.json()})},API_Task.prototype.addTaskExecutor=function(n,e){var t=JSON.stringify({id:e}),r=this.getJsonHeader(),i=new o.URLSearchParams;return i.set("taskId",n),this.http.put("/api/task/addTaskExecutor",t,{headers:r,search:i}).map(function(n){return n.json()})},API_Task.prototype.changeName=function(n,e){var t=JSON.stringify({id:n,name:e}),r=this.getJsonHeader();return this.http.put("/api/task/setName",t,{headers:r}).map(function(n){return n.json()})},API_Task.prototype.changeStatus=function(n,e){var t=JSON.stringify({id:n,status:e}),r=this.getJsonHeader();return this.http.put("/api/task/setStatus",t,{headers:r}).map(function(n){return n.json()})},API_Task.prototype.changeDescription=function(n,e){var t=JSON.stringify({id:n,description:e}),r=this.getJsonHeader();return this.http.put("/api/task/setDescription",t,{headers:r}).map(function(n){return n.json()})},API_Task.prototype.checkLowLevelAuthorities=function(n){var e=this.getUrlencodedHeader(),t=new o.URLSearchParams;return t.set("id",n),this.http.get("/api/task/checkLowLevelAuthorities",{headers:e,search:t}).map(function(n){return n.json()})},API_Task=__decorate([r.Injectable(),__metadata("design:paramtypes",[o.Http])],API_Task)}();e.API_Task=i},754:function(n,e,t){"use strict";var r=t(1),o=t(136);t(219);var i=function(){function API_User(n){this.http=n}return API_User.prototype.getJsonHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/json"),n},API_User.prototype.getUrlencodedHeader=function(){var n=new o.Headers;return n.append("Content-Type","application/x-www-form-urlencoded"),n},API_User.prototype.correctOffset=function(n){return n.replace("+","%2B")},API_User.prototype.getUserList=function(){this.getUrlencodedHeader();return this.http.get("/api/user/getUserList").map(function(n){return n.json()})},API_User=__decorate([r.Injectable(),__metadata("design:paramtypes",[o.Http])],API_User)}();e.API_User=i},749:function(n,e,t){"use strict";var r=t(748),o=function(n){function ProjectDTO(){n.apply(this,arguments),this.taskList=[]}return __extends(ProjectDTO,n),ProjectDTO}(r.Serializable);e.ProjectDTO=o},755:function(n,e,t){"use strict";var r=t(748),o=function(n){function ReportDTO(){n.apply(this,arguments)}return __extends(ReportDTO,n),ReportDTO}(r.Serializable);e.ReportDTO=o},748:function(n,e){"use strict";var t=function(){function Serializable(){}return Serializable.prototype.fillFromJSON=function(n){var e=JSON.parse(n);for(var t in e)this[t]=e[t]},Serializable}();e.Serializable=t},750:function(n,e,t){"use strict";var r=t(748),o=function(n){function TaskDTO(){n.apply(this,arguments),this.reportList=[]}return __extends(TaskDTO,n),TaskDTO}(r.Serializable);e.TaskDTO=o},756:function(n,e,t){"use strict";var r=t(748),o=function(n){function UserDTO(){n.apply(this,arguments)}return __extends(UserDTO,n),UserDTO}(r.Serializable);e.UserDTO=o},759:function(n,e,t){"use strict";var r=t(1),o=t(749),i=t(750),a=t(463),s=t(751),c=t(462),p=function(){function ProjectManagement(n,e,t){this.api_Project=n,this.api_Task=e,this.dateFormatter=t,this.taskSelected=new r.EventEmitter,this.isStatusBarOpen=!1,this.statusList=["Active","Frozen","Complete"],this.accessToChangeProject=!1,this.showProjectNameInput=!1,this.showProjectDescriptionTextArea=!1,this.showTaskNameInput=!1}return ProjectManagement.prototype.ngOnInit=function(){},ProjectManagement.prototype.openCloseStatusBar=function(n){this.statusBarValue=n,this.isStatusBarOpen=0==this.isStatusBarOpen},ProjectManagement.prototype.changeStatus=function(n){var e=this;this.project.status!=n&&this.api_Project.changeStatus(this.project.id,n).subscribe(function(t){e.project.status=n},function(n){console.log(n)}),this.isStatusBarOpen=0==this.isStatusBarOpen},ProjectManagement.prototype.checkAccessToCreateTask=function(){var n=this;this.accessToChangeProject?this.showTaskNameInput=!0:this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function(e){console.log(e),n.showTaskNameInput=!0,n.accessToChangeProject=!0},function(e){console.log(e),n.showTaskNameInput=!1})},ProjectManagement.prototype.createTask=function(n){var e=this;console.log(n),this.api_Task.createTask(n,this.project.id,this.dateFormatter.getUtcOffset()).subscribe(function(n){var t=new i.TaskDTO;t.fillFromJSON(JSON.stringify(n.responseObjects.task)),t.creationDateTime=e.dateFormatter.changeDateTimeToRuWithPattern(t.creationDateTime,"Do MMMM YYYY"),e.project.taskList.push(t),console.log(e.project),console.log(n)},function(n){console.log(n)})},ProjectManagement.prototype.checkAccessToChangeName=function(){var n=this;this.accessToChangeProject?this.showProjectNameInput=!0:this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function(e){console.log(e),n.showProjectNameInput=!0,n.accessToChangeProject=!0},function(e){console.log(e),n.showProjectNameInput=!1})},ProjectManagement.prototype.changeName=function(n){var e=this,t=n.trim();0!=t.length&&t!=this.project.name&&this.api_Project.changeName(this.project.id,n).subscribe(function(t){e.project.name=n},function(n){console.log(n)}),this.showProjectNameInput=!1},ProjectManagement.prototype.checkAccessToChangeDescription=function(){var n=this;this.accessToChangeProject?this.showProjectDescriptionTextArea=!0:this.api_Project.checkAccessToChangeProject(this.project.id).subscribe(function(e){n.showProjectDescriptionTextArea=!0,n.accessToChangeProject=!0},function(e){console.log(e),n.showProjectDescriptionTextArea=!1})},ProjectManagement.prototype.changeDescription=function(n){var e=this,t=n.trim();0!=t.length&&t!=this.project.description&&this.api_Project.changeDescription(this.project.id,n).subscribe(function(t){e.project.description=n},function(n){console.log(n)}),this.showProjectDescriptionTextArea=!1},ProjectManagement.prototype.moveToTask=function(n){this.taskSelected.emit({task:n})},__decorate([r.Input(),__metadata("design:type",o.ProjectDTO)],ProjectManagement.prototype,"project",void 0),__decorate([r.Output(),__metadata("design:type",Object)],ProjectManagement.prototype,"taskSelected",void 0),ProjectManagement=__decorate([r.Component({selector:"project-management",providers:[a.API_Project,s.API_Task],directives:[],pipes:[],encapsulation:r.ViewEncapsulation.Native,styles:[t(768)],template:t(769)}),__metadata("design:paramtypes",[a.API_Project,s.API_Task,c.DateFormatter])],ProjectManagement)}();e.ProjectManagement=p},768:function(n,e){n.exports='#management-content {\n  margin-left: 15px;\n  width: 100%;\n  background-color: white;\n  font-family: "Open sans", "lucida grande", "Segoe UI", arial, verdana, "lucida sans unicode", tahoma, sans-serif;\n}\n\n#first-level {\n  display: block;\n  border-bottom: 1px solid #eaebec;\n  padding: 15px 100px 15px 20px;\n}\n\n#first-level #project-name {\n  display: inline-block;\n  font-weight: 300;\n  font-size: 25px;\n  color: rgba(26, 177, 136, 1);\n\n}\n\n#first-level #projectNameInput {\n  display: inline-block;\n  font-weight: 100;\n  font-size: 22px;\n  width: 100%;\n}\n\n#first-level #creation-date-bar {\n  display: inline-block;\n  color: rgba(19, 35, 47, 0.9);\n}\n\n#first-level #owner-name-bar {\n  margin-left: 20px;\n  display: inline-block;\n  color: rgba(19, 35, 47, 0.9);\n  font-weight: 800;\n}\n\n#second-level {\n  display: block;\n  border-bottom: 1px solid #eaebec;\n}\n\n#second-level #status-bar {\n  display: inline-block;\n  padding: 10px 50px 10px 0;\n  border-left: 6px solid rgba(26, 177, 136, 1);\n  cursor: pointer;\n}\n\n#second-level #status-bar span {\n  padding-left: 10px;\n  font-weight: 700;\n}\n\n#second-level #drop-status-menu {\n  z-index: 2;\n\n  position: absolute;\n  width: 100px;\n  height: 150px;\n  background-color: white;\n  border: 1px solid #eaebec;\n}\n\n#second-level #drop-status-menu ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#second-level #drop-status-menu ul li {\n  font-weight: 300;\n  padding: 10px 0 10px 5px;\n}\n\n#second-level #drop-status-menu ul li:hover {\n  color: white;\n  background-color: rgba(26, 177, 136, 1);\n}\n\n#second-level #add-executor-bar {\n  display: inline-block;\n}\n\n#second-level #add-executor-bar select {\n  padding: 5px 20px;\n  font-size: 15px;\n  font-weight: 300;\n  cursor: pointer;\n}\n\n#third-level {\n  z-index: 1;\n  display: block;\n  color: black;\n  font-weight: 300;\n  border-bottom: 1px solid #eaebec;\n}\n\n#third-level #select-end-date {\n  display: inline-block;\n}\n\n#third-level #timer {\n  display: inline-block;\n}\n\n#third-level #create-task-bar {\n  padding: 10px 0;\n  margin-left: 10px;\n  display: inline-block;\n}\n\n#third-level #create-task-bar #just-do-it-bar {\n  font-size: 20px;\n  cursor: pointer;\n\n}\n\n#third-level #create-task-bar #taskNameInput {\n  margin-left: 10px;\n  display: inline-block;\n  font-size: 20px;\n  width: 100%;\n}\n\n#fourth-level {\n}\n\n#fourth-level #task-list ul {\n  padding: 0;\n  margin: 0;\n  width: auto;\n  list-style: none;\n  border-right: 5px solid rgba(26, 177, 136, 1);\n  border-left: 5px solid rgba(26, 177, 136, 1);\n}\n\n#fourth-level #task-list ul li {\n  padding: 6px 0;\n  font-size: 15px;\n  font-weight: 300;\n  color: #828282;\n  background-color: #FAFAFA;\n  border-top: 1px solid #eaebec;\n  cursor: pointer;\n}\n\n#fourth-level #task-list ul li:hover {\n\n  background-color: rgba(26, 177, 136, 0.8);\n  color: white;\n\n  -moz-transition: all 0.5s ease-out 0s;\n  -webkit-transition: all 0.5s ease-out 0s;\n  transition: all 0.5s ease-out 0s;\n}\n\n#fourth-level #task-list ul li span {\n  margin-left: 15px;\n}\n\n#fifth-level {\n  border-top: 1px solid #eaebec;\n\n}\n#fifth-level #description-span {\n  display: block;\n  padding: 10px 0 5px 20px;\n  font-size: 20px;\n  font-weight: 200;\n}\n#fifth-level #description {\n  padding: 5px 20px 20px 20px;\n  min-width: 200px;\n  min-height: 200px;\n  border-bottom: 1px solid #eaebec;\n}\n\n#fifth-level textarea {\n  padding: 5px 20px 20px 20px;\n  font-size: 17px;\n  min-width: 460px;\n  min-height: 250px;\n}\n\n'},769:function(n,e){n.exports='<div id="management-content">\n  <div id="first-level">\n    <div id="name-bar"\n         (click)="checkAccessToChangeName()">\n      <span id="project-name"\n            *ngIf="!showProjectNameInput">\n        {{project.name}}\n      </span>\n      <md-input id="projectNameInput"\n                *ngIf="showProjectNameInput"\n                #name [value]="project.name"\n                (keydown.enter)="changeName(name.value)"\n                (mouseleave)="changeName(name.value)">\n      </md-input>\n    </div>\n\n    <div id="creation-date-bar">\n      Создан: {{project.creationDateTime}}\n    </div>\n\n    <div id="owner-name-bar">\n      ( Владелец : {{project.owner.name}} )\n    </div>\n  </div>\n\n  <div id="second-level">\n    <div id="status-bar">\n      <div (click)="openCloseStatusBar()">\n        <span>{{project.status}}</span>\n        <img src="https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png" width="5%">\n      </div>\n      <div *ngIf=" isStatusBarOpen" id="drop-status-menu"\n           (mouseleave)="openCloseStatusBar()">\n        <ul>\n          <li *ngFor="let status of statusList"\n              (click)="changeStatus(status)">\n            {{status}}\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div id="add-executor-bar">\n      <select>\n        <option selected> Добавить пользователя</option>\n        <option>Миша</option>\n        <option>Вася</option>\n      </select>\n\n    </div>\n  </div>\n\n  <div id="third-level">\n    <!--  <div id="select-end-date">\n        <span>Выбрать дату окончания</span>\n      </div>-->\n    <div id="add-task">\n\n      <div id="create-task-bar"\n           (click)="checkAccessToCreateTask()">\n      <span id="just-do-it-bar"\n            *ngIf="!showTaskNameInput">\n        + Добавить задачу\n      </span>\n        <md-input id="taskNameInput"\n                  *ngIf="showTaskNameInput"\n                  #taskName\n                  (keydown.enter)="createTask(taskName.value)"\n                  (mouseleave)="showTaskNameInput=false">\n        </md-input>\n      </div>\n\n\n    </div>\n  </div>\n\n  <div id="fourth-level">\n    <div id="task-list">\n      <ul>\n        <li *ngFor="let task of project.taskList"\n        (click)="moveToTask(task)">\n          <span>{{task.name}}</span>\n        </li>\n      </ul>\n\n    </div>\n  </div>\n\n\n  <div id="fifth-level">\n    <span id="description-span">Описание:</span>\n    <div id="project-description">\n      <div id="description"\n           *ngIf="!showProjectDescriptionTextArea"\n           (click)="checkAccessToChangeDescription()">\n        <span *ngIf="project.description==undefined ||project.description.length==0 ">\n          Заполнить описание\n        </span>\n        <span\n          *ngIf="project.description!=undefined">\n          {{project.description}}\n        </span>\n      </div>\n\n      <div id="descriptionTextArea"\n           *ngIf="showProjectDescriptionTextArea">\n        <textarea #descr [value]="project.description"\n                  (keydown.enter)="changeDescription(descr.value)"\n                  (mouseleave)="changeDescription(descr.value)">\n        </textarea>\n        <!--<button md-raised-button class="md-raised md-primary"-->\n        <!--(click)="changeDescription(descr.value)">Изменить-->\n        <!--</button>-->\n      </div>\n\n    </div>\n  </div>\n\n</div>\n\n\n\n\n\n\n\n'},465:function(n,e,t){"use strict";var r=t(1),o=t(759),i=t(761),a=t(749),s=t(750),c=t(463),p=t(751),l=t(462),d=function(){function Projects(n,e,t){this.api_Project=n,this.api_Task=e,this.dateFormatter=t,this.targetProject=new a.ProjectDTO,this.projectList=[],this.openProjectBar=!1,this.openTaskBar=!1,this.openProjectTaskList=!1,this.openCreateProject=!1}return Projects.prototype.ngOnInit=function(){this.getUserActiveProjectList()},Projects.prototype.getUserActiveProjectList=function(){var n=this;this.api_Project.getUserActiveProjectList(this.dateFormatter.getUtcOffset()).subscribe(function(e){0!=e.responseObjects.projectList.length&&(n.projectList=n.transferProjectListToDTO(e.responseObjects.projectList))},function(n){console.log(n)})},Projects.prototype.getProjectHighTaskList=function(){var n=this;this.api_Task.getProjectHighTaskList(this.targetProject.id,this.dateFormatter.getUtcOffset()).subscribe(function(e){n.pushTransferTaskListToProject(e.responseObjects.taskList),console.log(e)},function(n){console.log(n)})},Projects.prototype.createProject=function(){var n=this;this.api_Project.createProject(this.projectName,this.dateFormatter.getUtcOffset()).subscribe(function(e){n.targetProject.fillFromJSON(JSON.stringify(e.responseObjects.project)),n.targetProject.creationDateTime=n.dateFormatter.changeDateTimeToRuWithPattern(n.targetProject.creationDateTime,"Do MMMM YYYY"),n.projectList.push(n.targetProject),n.openProjectBar=!0,n.openCreateProjectSwitch()},function(n){console.log(n),console.log(n._body)})},Projects.prototype.transferProjectListToDTO=function(n){for(var e=[],t=0;t<n.length;t++){var r=new a.ProjectDTO;r.fillFromJSON(JSON.stringify(n[t])),r.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(r.creationDateTime,"Do MMMM YYYY"),e.push(r)}return e},Projects.prototype.pushTransferTaskListToProject=function(n){for(var e=0;e<n.length;e++){var t=new s.TaskDTO;t.fillFromJSON(JSON.stringify(n[e])),t.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(t.creationDateTime,"Do MMMM YYYY"),this.targetProject.taskList.push(t)}},Projects.prototype.projectOpenCloseSwitch=function(n){this.openProjectBar=!0,this.openTaskBar=!1,this.openProjectTaskList=!1,this.targetProject=n,0==this.targetProject.taskList.length&&this.getProjectHighTaskList()},Projects.prototype.openCreateProjectSwitch=function(){this.openCreateProject=0==this.openCreateProject},Projects.prototype.changeProjectToTaskBar=function(n){this.openProjectTaskList=!0,this.openProjectBar=!1,this.openTaskBar=!0,this.targetTask=n.task},Projects=__decorate([r.Component({selector:"projects",providers:[c.API_Project,p.API_Task],directives:[o.ProjectManagement,i.TaskManagement],pipes:[],encapsulation:r.ViewEncapsulation.Native,styles:[t(770)],template:t(771)}),__metadata("design:paramtypes",[c.API_Project,p.API_Task,l.DateFormatter])],Projects)}();e.Projects=d},770:function(n,e){n.exports='#projects-content {\n  float: left;\n  margin: 20px;\n  height: 100%;\n  font-family: "Open sans", "lucida grande", "Segoe UI", arial, verdana, "lucida sans unicode", tahoma, sans-serif;\n\n}\n\n#projects-list-bar {\n  float: left;\n  display: inline-block;\n  width: 400px;\n  height: 100%;\n  background-color: white;\n}\n\n#projects-menu ul {\n  padding: 0;\n  margin: 0;\n}\n\n#projects-menu ul li {\n  list-style: none;\n  display: inline-block;\n  padding: 5px 10px;\n  margin-right: 10px;\n  font-size: 13px;\n  color: #6b99c7;\n  cursor: pointer;\n}\n\n#projects-menu ul li:hover {\n  background-color: #f5f8fc;\n}\n\n#project-list {\n  display: block;\n}\n\n#project-list #create-project-button  {\n  padding: 10px;\n  margin: 0 0;\n  cursor: pointer;\n}\n\n#project-list #create-project-button #plus-part {\n  display: inline-block;\n  color: #6b99c7;\n  font-size: 25px;\n  font-weight: bold;\n}\n\n#project-list #create-project-button #create-part {\n  display: inline-block;\n  color: #6b99c7;\n  font-size: 15px;\n}\n\n#create-project-button div:hover {\n  background-color: #f5f8fc;\n}\n\n#project-list #create-project-button form {\n  padding: 10px;\n  margin: 0 0;\n}\n\n#project-list #create-project-button input {\n  padding: 5px 25px;\n}\n#project-list #create-project-button button {\n  background-color: rgba(26, 177, 136, 1);\n }\n\n#project-list ul {\n  padding: 0;\n  margin: 0;\n  display: block;\n  list-style: none;\n}\n\n#project-list li {\n  padding: 10px 0;\n  border-top:   1px solid #eaebec;\n  cursor: pointer;\n}\n\n#project-list li:hover {\n background-color: aliceblue;\n}\n\n\n#project-list li span {\n  padding-left: 40px;\n  color: #515151;\n  font-weight: 400;\n}\n\n\n#project-list #task-list li {\n  padding: 5px 0;\n  border-top:  1px solid #eaebec;\n  font-size: 15px;\n  background-color: #929292;\n}\n\n#project-list #task-list li span {\n  padding-left: 60px;\n  color: #515151;\n  font-weight: 300;\n}\n\n#project-list #task-list li:hover {\n  background-color: aliceblue;\n}\n\n\n#project-task-management {\n  display: inline-block;\n  float: left;\n}\n\n\n'},771:function(n,e){n.exports='<div id="projects-content">\n\n  <div id="projects-list-bar">\n\n    <div id="projects-menu">\n      <ul>\n        <li>Активные</li>\n        <li>Законченные</li>\n        <li>Поиск проектов</li>\n      </ul>\n    </div>\n\n\n    <div id="project-list">\n      <div id="create-project-button">\n        <div *ngIf="!openCreateProject" (click)="openCreateProjectSwitch()">\n          <span id="plus-part">+</span>\n          <span id="create-part">Создать проект</span>\n        </div>\n        <form *ngIf="openCreateProject" (blur)="openCreateProjectSwitch()">\n          <input md-input [(ngModel)]="projectName"\n                 placeholder="Введите название проекта" type="text">\n          <button md-raised-button class="md-raised md-primary"\n                  (click)="createProject()">Подтвердить\n          </button>\n        </form>\n      </div>\n      <ul>\n        <li *ngIf="projectList.length==0">\n          <span>У вас нет ни одного проекта</span>\n        </li>\n        <li *ngFor="let project of projectList"\n            (click)="projectOpenCloseSwitch(project)">\n          <span id="project-name">{{project.name}}</span>\n\n          <div id="task-list" *ngIf="openProjectTaskList">\n            <ul *ngIf="targetProject.name==project.name &&\n             targetTask!=undefined">\n              <li *ngFor="let task of project.taskList">\n               <span>{{task.name}}</span>\n              </li>\n            </ul>\n          </div>\n        </li>\n      </ul>\n      <!-- <div id="create-task-button">\n      <div><span>+</span> Создать задачу</div>\n    </div>-->\n    </div>\n  </div>\n  <div id="project-task-management">\n    <project-management *ngIf="openProjectBar"\n                        [project]="targetProject"\n                        (taskSelected)="changeProjectToTaskBar($event)">\n\n    </project-management>\n\n    <task-management *ngIf="openTaskBar"\n                     [task]="targetTask">\n\n    </task-management>\n  </div>\n\n\n</div>\n'},760:function(n,e,t){"use strict";var r=t(1),o=t(750),i=t(752),a=t(462),s=function(){function ReportBar(n,e){this.api_Report=n,this.dateFormatter=e,this.createdReport=new r.EventEmitter,this.inputHours="",this.inputMinutes="",this.inputReport="",this.errorMessage=""}return ReportBar.prototype.ngOnInit=function(){this.inputDate=this.dateFormatter.getCurrentDate(),this.reportDate=this.dateFormatter.getCurrentMonth()},ReportBar.prototype.createReport=function(){var n=this;if(this.validateData()){this.inputHours=1==this.inputHours.length?"0"+this.inputHours:this.inputHours,this.inputMinutes=1==this.inputMinutes.length?"0"+this.inputMinutes:this.inputMinutes;var e=this.inputHours+":"+this.inputMinutes;this.api_Report.createReport(this.inputReport,e,this.inputDate,this.task.id,this.dateFormatter.getUtcOffset()).subscribe(function(e){n.createdReport.emit({report:e.responseObjects.report})},function(n){console.log(n)})}},ReportBar.prototype.validateData=function(){if(0==this.inputHours.length||0==this.inputMinutes.length)return this.errorMessage="Заполните время работы",!1;var n=+this.inputHours,e=+this.inputMinutes;return n>24?(this.errorMessage="Часов не может быть больше 24",!1):e>60?(this.errorMessage="Минут не может быть больше 60",!1):0==this.inputReport.trim().length?(this.errorMessage="Необходимо заполнить отчет",!1):!0},__decorate([r.Input(),__metadata("design:type",o.TaskDTO)],ReportBar.prototype,"task",void 0),__decorate([r.Output(),__metadata("design:type",Object)],ReportBar.prototype,"createdReport",void 0),ReportBar=__decorate([r.Component({selector:"report-bar",providers:[i.API_Report],directives:[],pipes:[],styles:[t(772)],template:t(773)}),__metadata("design:paramtypes",[i.API_Report,a.DateFormatter])],ReportBar)}();e.ReportBar=s},772:function(n,e){n.exports="#report-bar-container {\n  background-color: white;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n}\n\n#report-bar-container #report-bar-indent {\n  padding: 15px;\n}\n\n#report-bar-container #report-bar-timer {\n  display: inline-block;\n  font: 24px/32px 'Tahoma', sans-serif;\n}\n\n#report-bar-container #report-bar-timer input {\n  width: 25px;\n  height: 40px;\n  border: 1px solid #d9d9d9;\n  font: 24px/32px 'Tahoma', sans-serif;\n  text-align: right;\n  padding: 0 3px;\n  vertical-align: middle;\n}\n\n#report-bar-container #report-bar-calendar {\n  margin-left: 10px;\n  display: inline-block;\n}\n\n#report-bar-container #report-bar-textarea {\n  margin-top: 10px;\n  display: block;\n}\n\n#report-bar-container #report-bar-textarea textarea {\n  width: 300px;\n  height: 140px;\n  font-size: 21px;\n  font-weight: 100;\n}\n\n#report-bar-container #errorMessage {\n  display: block;\n  font-size: 13px;\n  color: darkred;\n}\n\n#report-bar-container #mega-calendar {\n  color: rgba(26, 177, 136, 1);\n  cursor: pointer;\n}\n\n#report-bar-container #mega-calendar:hover {\n  color: rgba(26, 177, 136, 0.8);\n}\n\n#report-bar-container #report-bar-send-report button {\n  background-color: rgba(26, 177, 136, 1);\n}\n\n\n\n"},773:function(n,e){n.exports='\n<div id="report-bar-container">\n\n  <div id="report-bar-indent">\n    <div id="report-bar-header">\n      <span>Часы</span>\n      <span>Минуты</span>\n      <div id="report-bar-timer">\n        <input id="hours" [(ngModel)]="inputHours" maxlength="2"\n               onkeyup="this.value = this.value.replace (/[^0-9]/, \'\')">\n        <span id="report-bar-timer-colon">:</span>\n        <input id="minutes" [(ngModel)]="inputMinutes" maxlength="2"\n               onkeyup="this.value = this.value.replace (/[^0-9]/, \'\')">\n      </div>\n\n        <div id="mega-calendar">\n            <span>За {{reportDate}}</span>\n        </div>\n\n    </div>\n\n    <div id="report-bar-textarea">\n    <textarea [(ngModel)]="inputReport">\n\n    </textarea>\n      <span id="errorMessage" *ngIf="errorMessage.length!=0">\n        {{errorMessage}}\n      </span>\n    </div>\n\n    <div id="report-bar-send-report">\n      <button md-raised-button class="md-raised md-primary"\n      (click)="createReport()">Добавить отчет\n      </button>\n    </div>\n  </div>\n\n</div>\n'},761:function(n,e,t){"use strict";var r=t(1),o=t(750),i=t(755),a=t(756),s=t(760),c=t(751),p=t(752),l=t(754),d=t(462),u=function(){function TaskManagement(n,e,t,r){this.api_Task=n,this.api_Report=e,this.api_User=t,this.dateFormatter=r,this.userList=[],this.isStatusBarOpen=!1,this.showTaskNameInput=!1,this.showSubTaskNameInput=!1,this.showTaskDescriptionTextArea=!1,this.showReportBar=!1,this.accessToChangeTask=!1,this.statusList=["Active","Frozen","New","Complete"]}return TaskManagement.prototype.ngOnInit=function(){this.getTaskAllReportList(),this.getUserList()},TaskManagement.prototype.changeName=function(n){var e=this,t=n.trim();0!=t.length&&t!=this.task.name&&this.api_Task.changeName(this.task.id,n).subscribe(function(t){e.task.name=n},function(n){console.log(n)}),this.showTaskNameInput=!1},TaskManagement.prototype.checkAccessToChangeName=function(){var n=this;this.accessToChangeTask?this.showTaskNameInput=!0:this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function(e){console.log(e),n.showTaskNameInput=!0,n.accessToChangeTask=!0},function(e){console.log(e),n.showTaskNameInput=!1})},TaskManagement.prototype.changeStatus=function(n){var e=this;this.task.status!=n&&this.api_Task.changeStatus(this.task.id,n).subscribe(function(t){e.task.status=n},function(n){console.log(n)}),this.isStatusBarOpen=0==this.isStatusBarOpen},TaskManagement.prototype.checkAccessToCreateSubTask=function(){var n=this;this.accessToChangeTask?this.showSubTaskNameInput=!0:this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function(e){console.log(e),n.showSubTaskNameInput=!0,n.accessToChangeTask=!0},function(e){console.log(e),n.showSubTaskNameInput=!1})},TaskManagement.prototype.changeDescription=function(n){var e=this,t=n.trim();0!=t.length&&t!=this.task.description&&this.api_Task.changeDescription(this.task.id,n).subscribe(function(t){e.task.description=n},function(n){console.log(n)}),this.showTaskDescriptionTextArea=!1},TaskManagement.prototype.checkAccessToChangeDescription=function(){var n=this;this.accessToChangeTask?this.showTaskDescriptionTextArea=!0:this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function(e){n.showTaskDescriptionTextArea=!0,n.accessToChangeTask=!0},function(e){console.log(e),n.showTaskDescriptionTextArea=!1})},TaskManagement.prototype.openCloseStatusBar=function(n){this.statusBarValue=n,this.isStatusBarOpen=0==this.isStatusBarOpen},TaskManagement.prototype.openCloseReportBar=function(){var n=this;this.accessToChangeTask?this.showReportBar=0==this.showReportBar:this.api_Task.checkLowLevelAuthorities(this.task.id).subscribe(function(e){n.showReportBar=!0,n.accessToChangeTask=!0},function(e){console.log(e),n.showReportBar=!1})},TaskManagement.prototype.getTaskAllReportList=function(){var n=this;this.api_Report.getTaskAllReportList(this.task.id,this.dateFormatter.getUtcOffset()).subscribe(function(e){console.log(e),n.pushTransferReportListToProject(e.responseObjects.reportList)},function(n){console.log(n)})},TaskManagement.prototype.reportCreated=function(n){this.showReportBar=!1,console.log(n)},TaskManagement.prototype.pushTransferReportListToProject=function(n){for(var e=0;e<n.length;e++){var t=new i.ReportDTO;t.fillFromJSON(JSON.stringify(n[e])),t.workTime=this.dateFormatter.transformTime(t.workTime),t.creationDateTime=this.dateFormatter.changeDateTimeToRuWithPattern(t.creationDateTime,"Do MMMM YYYY"),this.task.reportList.push(t)}},TaskManagement.prototype.getUserList=function(){var n=this;0==this.userList.length&&this.api_User.getUserList().subscribe(function(e){n.pushTransferUserListToListDTO(e.responseObjects.userList)},function(n){console.log(n)})},TaskManagement.prototype.addTaskExecutor=function(){void 0!=this.selectedUser?this.api_Task.addTaskExecutor(this.task.id,this.selectedUser.id).subscribe(function(n){console.log(n)},function(n){console.log(n)}):console.log("Необходимо выбрать исполнителя перед отправкой")},TaskManagement.prototype.userSelected=function(){var n=this;this.selectedUser=this.userList.find(function(e){return e.name===n.selectedUserName})},TaskManagement.prototype.pushTransferUserListToListDTO=function(n){for(var e=0;e<n.length;e++){var t=new a.UserDTO;t.fillFromJSON(JSON.stringify(n[e])),this.userList.push(t)}},__decorate([r.Input(),__metadata("design:type",o.TaskDTO)],TaskManagement.prototype,"task",void 0),TaskManagement=__decorate([r.Component({selector:"task-management",providers:[c.API_Task,p.API_Report,l.API_User],directives:[s.ReportBar],pipes:[],styles:[t(774)],template:t(775)}),__metadata("design:paramtypes",[c.API_Task,p.API_Report,l.API_User,d.DateFormatter])],TaskManagement)}();e.TaskManagement=u},774:function(n,e){n.exports='#management-content {\n  margin-left: 15px;\n  width: 100%;\n  background-color: white;\n  font-family: "Open sans", "lucida grande", "Segoe UI", arial, verdana, "lucida sans unicode", tahoma, sans-serif;\n}\n\n#first-level {\n  display: block;\n  border-bottom: 1px solid #eaebec;\n  padding: 15px 100px 15px 20px;\n}\n\n#first-level #task-name {\n  display: inline-block;\n  font-weight: 300;\n  font-size: 25px;\n  color: rgba(26, 177, 136, 1);;\n\n}\n\n#first-level #taskNameInput {\n  display: inline-block;\n  font-weight: 100;\n  font-size: 22px;\n  width: 100%;\n}\n\n#first-level #creation-date-bar {\n  display: inline-block;\n  color: rgba(19, 35, 47, 0.9);\n}\n\n#first-level #owner-name-bar {\n  margin-left: 20px;\n  display: inline-block;\n  color: rgba(19, 35, 47, 0.9);\n  font-weight: 800;\n}\n\n#first-level #executor-name-bar {\n  margin-left: 20px;\n  display: block;\n  color: rgba(19, 35, 47, 0.9);\n  font-weight: 800;\n}\n\n#second-level {\n  display: block;\n  border-bottom: 1px solid #eaebec;\n}\n\n#second-level #status-bar {\n  display: inline-block;\n  padding: 10px 10px 10px 0;\n  border-left: 6px solid rgba(26, 177, 136, 1);\n  cursor: pointer;\n}\n\n#second-level #status-bar span {\n  padding-left: 10px;\n  font-weight: 700;\n}\n\n#second-level #drop-status-menu {\n  z-index: 2;\n\n  position: absolute;\n  width: 100px;\n  height: 180px;\n  background-color: white;\n  border: 1px solid #eaebec;\n}\n\n#second-level #drop-status-menu ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#second-level #drop-status-menu ul li {\n  font-weight: 300;\n  padding: 10px 0 10px 5px;\n}\n\n#second-level #drop-status-menu ul li:hover {\n  color: white;\n  background-color: rgba(26, 177, 136, 1);\n}\n\n#second-level #drop-report-menu  {\n  margin-left: 10px;\n  display: inline-block;\n}\n\n#second-level #drop-report-menu button  {\n  background-color: rgba(26, 177, 136, 1);\n}\n\n#second-level #drop-report-menu button:hover {\n  background-color: rgba(26, 177, 136, 0.8);\n}\n\n#second-level #add-executor-bar {\n  display: inline-block;\n}\n#second-level #add-executor-bar button {\n  background-color: rgba(26, 177, 136, 1);\n}\n\n\n#second-level #create-report-bar{\n  position: absolute;\n  left: 780px;\n  top: 240px;\n}\n\n#second-level #add-executor-bar select {\n  padding: 5px 20px;\n  font-size: 15px;\n  font-weight: 300;\n  cursor: pointer;\n}\n\n#third-level {\n  z-index: 1;\n  display: block;\n  color: black;\n  font-weight: 300;\n  border-bottom: 1px solid #eaebec;\n}\n\n#third-level #select-end-date {\n  display: inline-block;\n}\n\n#third-level #timer {\n  display: inline-block;\n}\n\n#third-level #create-sub-task-bar {\n  padding: 10px 0;\n  margin-left: 10px;\n  display: inline-block;\n}\n\n#third-level #create-sub-task-bar #just-do-it-bar {\n  font-size: 20px;\n  cursor: pointer;\n\n}\n\n#third-level #create-sub-task-bar #subTaskNameInput {\n  margin-left: 10px;\n  display: inline-block;\n  font-size: 20px;\n  width: 100%;\n}\n\n#fourth-level {\n}\n\n#fourth-level #sub-task-list ul {\n  padding: 0;\n  margin: 0;\n  width: auto;\n  list-style: none;\n  border-right: 5px solid rgba(26, 177, 136, 1);\n  border-left: 5px solid rgba(26, 177, 136, 1);\n}\n\n#fourth-level #sub-task-list ul li {\n  padding: 6px 0;\n  font-size: 15px;\n  font-weight: 300;\n  color: #828282;\n  background-color: #FAFAFA;\n  border-top: 1px solid #eaebec;\n  cursor: pointer;\n}\n\n#fourth-level #sub-task-list ul li:hover {\n\n  background-color: rgba(26, 177, 136, 0.8);\n  color: white;\n\n  -moz-transition: all 0.5s ease-out 0s;\n  -webkit-transition: all 0.5s ease-out 0s;\n  transition: all 0.5s ease-out 0s;\n}\n\n#fourth-level #sub-task-list ul li span {\n  margin-left: 15px;\n}\n\n#fifth-level {\n  border-top: 1px solid #eaebec;\n\n}\n#fifth-level #description-span {\n  display: block;\n  padding: 10px 0 5px 20px;\n  font-size: 20px;\n  font-weight: 200;\n}\n#fifth-level #description {\n  padding: 5px 20px 20px 20px;\n  min-width: 200px;\n  min-height: 200px;\n  border-bottom: 1px solid #eaebec;\n}\n\n#fifth-level textarea {\n  padding: 5px 20px 20px 20px;\n  font-size: 17px;\n  min-width: 460px;\n  min-height: 250px;\n}\n\n#sixth-level{\n  display: block;\n}\n\n#sixth-level #report-bar{\n  display: block;\n}\n\n#sixth-level #report-bar ul{\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n#sixth-level #report-bar ul li {\n  border-bottom: 1px solid #eaebec;\n}\n\n#sixth-level #report-bar ul li #report-bar-header {\n  padding: 5px 0;\n  color: white;\n  background-color: rgba(26, 177, 136, 1);\n}\n\n#sixth-level #report-bar ul li #author{\n  margin-left: 10px;\n  display: inline-block;\n  font-size: 16px;\n}\n\n#sixth-level #report-bar ul li #creation-date{\n  float: right;\n  display: inline-block;\n  margin-right: 5px;\n  font-size: 16px;\n}\n\n#sixth-level #report-bar ul li #report{\n  min-height: 50px;\n  display:block;\n  margin: 10px;\n  font-size: 18px;\n}\n\n#sixth-level #report-bar ul li #spend-time{\n  display:block;\n  margin: 0 0 5px 10px;\n  font-size: 15px;\n  color: rgba(26, 177, 136, 1);\n}\n\n\n\n\n\n\n\n\n';
},775:function(n,e){n.exports='<div id="management-content">\n  <div id="first-level">\n    <div id="name-bar"\n         (click)="checkAccessToChangeName()">\n      <span id="task-name"\n            *ngIf="!showTaskNameInput">\n        {{task.name}}\n      </span>\n      <md-input id="taskNameInput"\n                *ngIf="showTaskNameInput"\n                #name [value]="task.name"\n                (keydown.enter)="changeName(name.value)"\n                (mouseleave)="changeName(name.value)">\n      </md-input>\n    </div>\n\n    <div id="creation-date-bar">\n      Создана: {{task.creationDateTime}}\n    </div>\n\n    <div id="owner-name-bar">\n      ( Владелец : {{task.owner.name}} )\n    </div>\n\n    <div id="executor-name-bar">\n      <span *ngIf="task.executor!=undefined">\n        ( Исполнитель : {{task.executor.name}} )\n      </span>\n      <span *ngIf="task.executor==undefined">\n        Исполнитель не назначен\n      </span>\n    </div>\n  </div>\n\n  <div id="second-level">\n    <div id="status-bar">\n      <div (click)="openCloseStatusBar()">\n        <span>{{task.status}}</span>\n        <img src="https://cdn4.iconfinder.com/data/icons/geomicons/32/672341-triangle-down-128.png" width="5%">\n      </div>\n      <div *ngIf=" isStatusBarOpen" id="drop-status-menu"\n           (mouseleave)="openCloseStatusBar()">\n        <ul>\n          <li *ngFor="let status of statusList"\n              (click)="changeStatus(status)">\n            {{status}}\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <div id="drop-report-menu">\n      <button md-raised-button class="md-raised md-primary"\n              (click)="openCloseReportBar()">\n        Создать отчет\n      </button>\n      <div *ngIf="showReportBar" id="create-report-bar">\n        <report-bar [task]="task" (createdReport)="reportCreated($event)"></report-bar>\n      </div>\n    </div>\n\n\n    <div id="add-executor-bar">\n      <select [(ngModel)]="selectedUserName"\n              (ngModelChange)="userSelected()">\n        <option selected>Выбрать Исполнителя</option>\n        <option *ngFor=" let user of userList">{{user.name}}\n      </option>\n      </select>\n      <button md-raised-button class="md-raised md-primary"\n              (click)="addTaskExecutor()">\n        Добавить\n      </button>\n    </div>\n  </div>\n\n  <div id="third-level">\n    <!--  <div id="select-end-date">\n        <span>Выбрать дату окончания</span>\n      </div>-->\n    <div id="add-sub-task">\n\n      <div id="create-sub-task-bar"\n           (click)="checkAccessToCreateSubTask()">\n      <span id="just-do-it-bar"\n            *ngIf="!showSubTaskNameInput">\n        + Добавить Подзадачу\n      </span>\n        <md-input id="subTaskNameInput"\n                  *ngIf="showSubTaskNameInput"\n                  #subTaskName\n                  (keydown.enter)="createTask(subTaskName.value)"\n                  (mouseleave)="showSubTaskNameInput=false">\n        </md-input>\n      </div>\n\n\n    </div>\n  </div>\n\n  <!--  <div id="fourth-level">\n      <div id="sub-task-list">\n        <ul>\n          <li *ngFor="let task of project.taskList"\n              (click)="moveToTask(task)">\n            <span>{{task.name}}</span>\n          </li>\n        </ul>\n      </div>\n    </div>-->\n\n\n  <div id="fifth-level">\n    <span id="description-span">Описание:</span>\n    <div id="task-description">\n      <div id="description"\n           *ngIf="!showTaskDescriptionTextArea"\n           (click)="checkAccessToChangeDescription()">\n        <span *ngIf="task.description==undefined ||task.description.length==0 ">\n          Заполнить описание\n        </span>\n        <span\n          *ngIf="task.description!=undefined">\n          {{task.description}}\n        </span>\n      </div>\n\n      <div id="descriptionTextArea"\n           *ngIf="showTaskDescriptionTextArea">\n        <textarea #descr [value]="task.description"\n                  (keydown.enter)="changeDescription(descr.value)"\n                  (mouseleave)="changeDescription(descr.value)">\n        </textarea>\n      </div>\n\n    </div>\n  </div>\n\n  <div id="sixth-level">\n    <div id="report-bar">\n      <ul>\n        <li *ngFor="let report of task.reportList">\n          <div id="report-bar-header">\n            <div id="author"> Автор: {{report.creator.name}}</div>\n            <div id="creation-date">Создан:{{report.creationDateTime}}</div>\n          </div>\n          <div id="report">{{report.report}}</div>\n          <div id="spend-time">Времени затрачено: {{report.workTime}}\n            за {{report.workDate}}\n          </div>\n        </li>\n      </ul>\n\n    </div>\n  </div>\n\n</div>\n\n\n\n\n\n\n\n'}});
//# sourceMappingURL=1.bundle.map